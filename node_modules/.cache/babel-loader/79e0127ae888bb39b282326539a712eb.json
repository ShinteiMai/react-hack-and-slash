{"ast":null,"code":"var _jsxFileName = \"/home/shinteimai/workspace/personal/react-hack-n-slash/src/components/PokemonGenerations.tsx\";\nimport React, { useCallback } from \"react\";\nimport Modal from \"./Modal\";\nimport PokemonGenerationCard from \"./PokemonGenerationCard\";\nimport PokemonIcon from \"./PokemonIcon\";\nimport { importPokemonImage } from \"../globals\";\nimport { PokemonGenerationsEnum } from \"../features/cachedPokemonsSlice\";\nconst generations = [[importPokemonImage(\"bulbasaur\"), importPokemonImage(\"charmander\"), importPokemonImage(\"squirtle\")], [importPokemonImage(\"chikorita\"), importPokemonImage(\"cyndaquil\"), importPokemonImage(\"totodile\")], [importPokemonImage(\"treecko\"), importPokemonImage(\"torchic\"), importPokemonImage(\"mudkip\")], [importPokemonImage(\"turtwig\"), importPokemonImage(\"chimcar\"), importPokemonImage(\"piplup\")], [importPokemonImage(\"snivy\"), importPokemonImage(\"tepig\"), importPokemonImage(\"oshawott\")], [importPokemonImage(\"chespin\"), importPokemonImage(\"fennekin\"), importPokemonImage(\"froakie\")], [importPokemonImage(\"rowlet\"), importPokemonImage(\"litten\"), importPokemonImage(\"popplio\")]];\n\nconst PokemonGenerations = ({\n  selectedGeneration,\n  setSelectedGeneration,\n  changeGenerationHandler,\n  isLoading\n}) => {\n  const indexToPokemonGenerations = useCallback(realIndex => {\n    const pokemonGenerations = Object.entries(PokemonGenerationsEnum);\n    let selectedEnum = null;\n    pokemonGenerations.forEach(([_, b], index) => {\n      if (index === realIndex) {\n        selectedEnum = b;\n      }\n    });\n    return selectedEnum;\n  }, []);\n  const pokemonGenerationsToIndex = useCallback(selectedGeneration => {\n    const pokemonGenerations = Object.entries(PokemonGenerationsEnum);\n    let selectedIndex = 0;\n    pokemonGenerations.forEach(([_, b], index) => {\n      if (b === selectedGeneration) {\n        selectedIndex = index;\n      }\n    });\n    return selectedIndex;\n  }, []);\n  return /*#__PURE__*/React.createElement(Modal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Button, {\n    disabled: isLoading,\n    className: \"bg-primaryGray px-4 py-1 rounded-lg text-white hover:border-transparent focus:outline-none \" + \" \" + (isLoading ? \"opacity-25 cursor-default\" : \"cursor-pointer transform hover:-translate-y-1 hover:shadow transition-all duration-200 ease-in-out\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex justify-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, selectedGeneration !== null ? /*#__PURE__*/React.createElement(React.Fragment, null, generations[pokemonGenerationsToIndex(selectedGeneration)].map((image, index) => /*#__PURE__*/React.createElement(PokemonIcon, {\n    key: `${image}-${index}`,\n    src: image,\n    alt: `Pokemon Icon Image`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 19\n    }\n  }))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PokemonIcon, {\n    src: importPokemonImage(\"bulbasaur\"),\n    alt: \"Bulbasaur\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(PokemonIcon, {\n    src: importPokemonImage(\"charmander\"),\n    alt: \"Charmander\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(PokemonIcon, {\n    src: importPokemonImage(\"squirtle\"),\n    alt: \"Squirtle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Modal.Content, {\n    title: \"Pok\\xE9mon Generations\",\n    handleSaveModal: changeGenerationHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mx-auto py-3 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 gap-x-5 gap-y-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, generations.map((images, index) => /*#__PURE__*/React.createElement(PokemonGenerationCard, {\n    key: `generations-${index}`,\n    images: images,\n    generation: index + 1,\n    isSelected: selectedGeneration === indexToPokemonGenerations(index) && selectedGeneration !== null,\n    handleClick: () => {\n      setSelectedGeneration(previousGeneration => {\n        const pickedGeneration = indexToPokemonGenerations(index);\n        return previousGeneration === pickedGeneration ? null : pickedGeneration;\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default PokemonGenerations;","map":{"version":3,"sources":["/home/shinteimai/workspace/personal/react-hack-n-slash/src/components/PokemonGenerations.tsx"],"names":["React","useCallback","Modal","PokemonGenerationCard","PokemonIcon","importPokemonImage","PokemonGenerationsEnum","generations","PokemonGenerations","selectedGeneration","setSelectedGeneration","changeGenerationHandler","isLoading","indexToPokemonGenerations","realIndex","pokemonGenerations","Object","entries","selectedEnum","forEach","_","b","index","pokemonGenerationsToIndex","selectedIndex","map","image","images","previousGeneration","pickedGeneration"],"mappings":"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","sourcesContent":["import React, { useCallback } from \"react\";\n\nimport Modal from \"./Modal\";\nimport PokemonGenerationCard from \"./PokemonGenerationCard\";\nimport PokemonIcon from \"./PokemonIcon\";\n\nimport { importPokemonImage } from \"../globals\";\nimport { PokemonGenerationsEnum } from \"../features/cachedPokemonsSlice\";\n\nconst generations = [\n  [\n    importPokemonImage(\"bulbasaur\"),\n    importPokemonImage(\"charmander\"),\n    importPokemonImage(\"squirtle\"),\n  ],\n  [\n    importPokemonImage(\"chikorita\"),\n    importPokemonImage(\"cyndaquil\"),\n    importPokemonImage(\"totodile\"),\n  ],\n  [\n    importPokemonImage(\"treecko\"),\n    importPokemonImage(\"torchic\"),\n    importPokemonImage(\"mudkip\"),\n  ],\n  [\n    importPokemonImage(\"turtwig\"),\n    importPokemonImage(\"chimcar\"),\n    importPokemonImage(\"piplup\"),\n  ],\n  [\n    importPokemonImage(\"snivy\"),\n    importPokemonImage(\"tepig\"),\n    importPokemonImage(\"oshawott\"),\n  ],\n  [\n    importPokemonImage(\"chespin\"),\n    importPokemonImage(\"fennekin\"),\n    importPokemonImage(\"froakie\"),\n  ],\n  [\n    importPokemonImage(\"rowlet\"),\n    importPokemonImage(\"litten\"),\n    importPokemonImage(\"popplio\"),\n  ],\n];\n\ntype Props = {\n  selectedGeneration: PokemonGenerationsEnum | null;\n  setSelectedGeneration: React.Dispatch<\n    React.SetStateAction<PokemonGenerationsEnum | null>\n  >;\n  changeGenerationHandler: () => void;\n  isLoading: boolean;\n};\n\nconst PokemonGenerations = ({\n  selectedGeneration,\n  setSelectedGeneration,\n  changeGenerationHandler,\n  isLoading,\n}: Props) => {\n  const indexToPokemonGenerations = useCallback(\n    (realIndex: number): PokemonGenerationsEnum | null => {\n      const pokemonGenerations = Object.entries(PokemonGenerationsEnum);\n      let selectedEnum: PokemonGenerationsEnum | null = null;\n\n      pokemonGenerations.forEach(([_, b], index) => {\n        if (index === realIndex) {\n          selectedEnum = b;\n        }\n      });\n      return selectedEnum;\n    },\n    []\n  );\n\n  const pokemonGenerationsToIndex = useCallback(\n    (selectedGeneration: PokemonGenerationsEnum): number => {\n      const pokemonGenerations = Object.entries(PokemonGenerationsEnum);\n      let selectedIndex: number = 0;\n\n      pokemonGenerations.forEach(([_, b], index) => {\n        if (b === selectedGeneration) {\n          selectedIndex = index;\n        }\n      });\n\n      return selectedIndex;\n    },\n    []\n  );\n\n  return (\n    <Modal>\n      <Modal.Button\n        disabled={isLoading}\n        className={\n          \"bg-primaryGray px-4 py-1 rounded-lg text-white hover:border-transparent focus:outline-none \" +\n          \" \" +\n          (isLoading\n            ? \"opacity-25 cursor-default\"\n            : \"cursor-pointer transform hover:-translate-y-1 hover:shadow transition-all duration-200 ease-in-out\")\n        }\n      >\n        <div className=\"flex justify-between\">\n          {selectedGeneration !== null ? (\n            <>\n              {generations[pokemonGenerationsToIndex(selectedGeneration)].map(\n                (image, index) => (\n                  <PokemonIcon\n                    key={`${image}-${index}`}\n                    src={image}\n                    alt={`Pokemon Icon Image`}\n                  />\n                )\n              )}\n            </>\n          ) : (\n            <>\n              <PokemonIcon\n                src={importPokemonImage(\"bulbasaur\")}\n                alt=\"Bulbasaur\"\n              />\n              <PokemonIcon\n                src={importPokemonImage(\"charmander\")}\n                alt=\"Charmander\"\n              />\n              <PokemonIcon\n                src={importPokemonImage(\"squirtle\")}\n                alt=\"Squirtle\"\n              />\n            </>\n          )}\n        </div>\n      </Modal.Button>\n      <Modal.Content\n        title=\"Pokémon Generations\"\n        handleSaveModal={changeGenerationHandler}\n      >\n        <div className=\"mx-auto py-3 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 gap-x-5 gap-y-6\">\n          {generations.map((images, index) => (\n            <PokemonGenerationCard\n              key={`generations-${index}`}\n              images={images}\n              generation={index + 1}\n              isSelected={\n                selectedGeneration === indexToPokemonGenerations(index) &&\n                selectedGeneration !== null\n              }\n              handleClick={() => {\n                setSelectedGeneration((previousGeneration) => {\n                  const pickedGeneration = indexToPokemonGenerations(index);\n                  return previousGeneration === pickedGeneration\n                    ? null\n                    : pickedGeneration;\n                });\n              }}\n            />\n          ))}\n        </div>\n      </Modal.Content>\n    </Modal>\n  );\n};\nexport default PokemonGenerations;\n"]},"metadata":{},"sourceType":"module"}