{"ast":null,"code":"import _slicedToArray from\"/home/shinteimai/workspace/personal/react-pokedex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState,useContext,createContext}from\"react\";import{useDispatch}from\"react-redux\";import{getPokemons,PAGINATE_SIZE}from\"../features/pokemonSlice\";import{PokemonGenerationsEnum}from\"../features/cachedPokemonsSlice\";import useTailwindMediaQuery from\"../hooks/useTailwindMediaQuery\";import LoadButton from\"./LoadButton\";import{randomize}from\"../utils/randomize\";import{Waypoint as ReactWaypoint}from\"react-waypoint\";var InfiniteScrollContext=createContext({page:0,setPage:function setPage(){},numCols:0,setNumCols:function setNumCols(){},isLoading:true,paginationHandler:getPokemons});var Waypoint=function Waypoint(){var _useContext=useContext(InfiniteScrollContext),isLoading=_useContext.isLoading,setPage=_useContext.setPage,page=_useContext.page,paginationHandler=_useContext.paginationHandler;var dispatch=useDispatch();return/*#__PURE__*/React.createElement(\"div\",{className:\"mt-48\"},/*#__PURE__*/React.createElement(ReactWaypoint,{onEnter:function onEnter(){if(!isLoading){setPage(page+PAGINATE_SIZE);dispatch(paginationHandler(page));}}}));};var Button=function Button(){var _useContext2=useContext(InfiniteScrollContext),isLoading=_useContext2.isLoading,setPage=_useContext2.setPage,page=_useContext2.page;return/*#__PURE__*/React.createElement(\"div\",{className:\"py-16 mx-auto\"},isLoading?null:/*#__PURE__*/React.createElement(\"div\",{className:\"mt-6\"},/*#__PURE__*/React.createElement(LoadButton,{clickHandler:function clickHandler(){setPage(page+PAGINATE_SIZE);}})));};var Container=function Container(_ref){var children=_ref.children;var _useContext3=useContext(InfiniteScrollContext),numCols=_useContext3.numCols;return/*#__PURE__*/React.createElement(\"div\",{className:\"w-full mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-x-8 lg:gap-x-5 gap-y-6\"},children({numCols:numCols}));};var InfiniteScroll=function InfiniteScroll(_ref2){var children=_ref2.children,paginationHandler=_ref2.paginationHandler,isLoading=_ref2.isLoading;var _useTailwindMediaQuer=useTailwindMediaQuery(),isSmall=_useTailwindMediaQuer.isSmall,isLarge=_useTailwindMediaQuer.isLarge;var _useState=useState(randomize(0,Number(PokemonGenerationsEnum.GENERATION_7)-PAGINATE_SIZE)),_useState2=_slicedToArray(_useState,2),page=_useState2[0],setPage=_useState2[1];var _useState3=useState(1),_useState4=_slicedToArray(_useState3,2),numCols=_useState4[0],setNumCols=_useState4[1];useEffect(function(){var col;if(isSmall){col=2;}if(isLarge){col=3;}else{col=1;}setNumCols(col);},[isSmall,isLarge]);return/*#__PURE__*/React.createElement(InfiniteScrollContext.Provider,{value:{page:page,setPage:setPage,numCols:numCols,setNumCols:setNumCols,isLoading:isLoading,paginationHandler:paginationHandler}},children({mutatePage:setPage}));};InfiniteScroll.Container=Container;InfiniteScroll.Button=Button;InfiniteScroll.Waypoint=Waypoint;export default InfiniteScroll;","map":{"version":3,"sources":["/home/shinteimai/workspace/personal/react-pokedex/src/components/InfiniteScroll.tsx"],"names":["React","useEffect","useState","useContext","createContext","useDispatch","getPokemons","PAGINATE_SIZE","PokemonGenerationsEnum","useTailwindMediaQuery","LoadButton","randomize","Waypoint","ReactWaypoint","InfiniteScrollContext","page","setPage","numCols","setNumCols","isLoading","paginationHandler","dispatch","Button","Container","children","InfiniteScroll","isSmall","isLarge","Number","GENERATION_7","col","mutatePage"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext, createContext } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getPokemons, PAGINATE_SIZE } from \"../features/pokemonSlice\";\nimport { PokemonGenerationsEnum } from \"../features/cachedPokemonsSlice\";\nimport useTailwindMediaQuery from \"../hooks/useTailwindMediaQuery\";\nimport LoadButton from \"./LoadButton\";\nimport { randomize } from \"../utils/randomize\";\nimport { Waypoint as ReactWaypoint } from \"react-waypoint\";\n\ntype ContextType = {\n  page: number;\n  setPage: React.Dispatch<React.SetStateAction<number>>;\n  numCols: number;\n  setNumCols: React.Dispatch<React.SetStateAction<number>>;\n  isLoading: boolean;\n  paginationHandler: (\n    page: number\n  ) => (dispatch: React.Dispatch<any>) => Promise<void>;\n};\nconst InfiniteScrollContext = createContext<ContextType>({\n  page: 0,\n  setPage: () => {},\n  numCols: 0,\n  setNumCols: () => {},\n  isLoading: true,\n  paginationHandler: getPokemons,\n});\n\nconst Waypoint = () => {\n  const { isLoading, setPage, page, paginationHandler } = useContext(\n    InfiniteScrollContext\n  );\n  const dispatch = useDispatch();\n  return (\n    <div className=\"mt-48\">\n      <ReactWaypoint\n        onEnter={() => {\n          if (!isLoading) {\n            setPage(page + PAGINATE_SIZE);\n            dispatch(paginationHandler(page));\n          }\n        }}\n      />\n    </div>\n  );\n};\n\nconst Button = () => {\n  const { isLoading, setPage, page } = useContext(InfiniteScrollContext);\n  return (\n    <div className=\"py-16 mx-auto\">\n      {isLoading ? null : (\n        <div className=\"mt-6\">\n          <LoadButton\n            clickHandler={() => {\n              setPage(page + PAGINATE_SIZE);\n            }}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\ntype ContainerProps = {\n  children: ({ numCols }: { numCols: number }) => React.ReactNode;\n};\nconst Container = ({ children }: ContainerProps) => {\n  const { numCols } = useContext(InfiniteScrollContext);\n\n  return (\n    <div className=\"w-full mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-x-8 lg:gap-x-5 gap-y-6\">\n      {children({ numCols })}\n    </div>\n  );\n};\n\ntype InfiniteScrollProps = {\n  children: ({\n    mutatePage: resetPage,\n  }: {\n    mutatePage: React.Dispatch<React.SetStateAction<number>>;\n  }) => React.ReactNode;\n  paginationHandler: (\n    page: number\n  ) => (dispatch: React.Dispatch<any>) => Promise<void>;\n  isLoading: boolean;\n};\n\nconst InfiniteScroll = ({\n  children,\n  paginationHandler,\n  isLoading,\n}: InfiniteScrollProps) => {\n  const { isSmall, isLarge } = useTailwindMediaQuery();\n  const [page, setPage] = useState(\n    randomize(0, Number(PokemonGenerationsEnum.GENERATION_7) - PAGINATE_SIZE)\n  );\n  const [numCols, setNumCols] = useState(1);\n\n  useEffect(() => {\n    let col: number;\n\n    if (isSmall) {\n      col = 2;\n    }\n    if (isLarge) {\n      col = 3;\n    } else {\n      col = 1;\n    }\n\n    setNumCols(col);\n  }, [isSmall, isLarge]);\n\n  return (\n    <InfiniteScrollContext.Provider\n      value={{\n        page,\n        setPage,\n        numCols,\n        setNumCols,\n        isLoading,\n        paginationHandler,\n      }}\n    >\n      {children({ mutatePage: setPage })}\n    </InfiniteScrollContext.Provider>\n  );\n};\n\nInfiniteScroll.Container = Container;\nInfiniteScroll.Button = Button;\nInfiniteScroll.Waypoint = Waypoint;\nexport default InfiniteScroll;\n"]},"metadata":{},"sourceType":"module"}