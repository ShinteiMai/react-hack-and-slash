{"ast":null,"code":"import _slicedToArray from\"/home/shinteimai/workspace/personal/react-pokedex/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState,useCallback}from\"react\";export var useResize=function useResize(myRef){var getDimensions=useCallback(function(){return myRef.current?{width:myRef.current.offsetWidth,height:myRef.current.offsetHeight,top:myRef.current.offsetTop,left:myRef.current.offsetLeft}:{width:0,height:0,top:0,left:0};},[myRef]);var _useState=useState({width:0,height:0,left:0,top:0}),_useState2=_slicedToArray(_useState,2),dimensions=_useState2[0],setDimensions=_useState2[1];useEffect(function(){var handleResize=function handleResize(){setDimensions(getDimensions());};if(myRef.current){setDimensions(getDimensions());}window.addEventListener(\"resize\",handleResize);return function(){window.removeEventListener(\"resize\",handleResize);};},[myRef,getDimensions]);return dimensions;};","map":{"version":3,"sources":["/home/shinteimai/workspace/personal/react-pokedex/src/hooks/useResize.ts"],"names":["useEffect","useState","useCallback","useResize","myRef","getDimensions","current","width","offsetWidth","height","offsetHeight","top","offsetTop","left","offsetLeft","dimensions","setDimensions","handleResize","window","addEventListener","removeEventListener"],"mappings":"wKAAA,OAASA,SAAT,CAAoBC,QAApB,CAAgDC,WAAhD,KAAmE,OAAnE,CAEA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAiD,CACxE,GAAMC,CAAAA,aAAa,CAAGH,WAAW,CAC/B,iBACEE,CAAAA,KAAK,CAACE,OAAN,CACI,CACEC,KAAK,CAAEH,KAAK,CAACE,OAAN,CAAcE,WADvB,CAEEC,MAAM,CAAEL,KAAK,CAACE,OAAN,CAAcI,YAFxB,CAGEC,GAAG,CAAEP,KAAK,CAACE,OAAN,CAAcM,SAHrB,CAIEC,IAAI,CAAET,KAAK,CAACE,OAAN,CAAcQ,UAJtB,CADJ,CAOI,CACEP,KAAK,CAAE,CADT,CAEEE,MAAM,CAAE,CAFV,CAGEE,GAAG,CAAE,CAHP,CAIEE,IAAI,CAAE,CAJR,CARN,EAD+B,CAe/B,CAACT,KAAD,CAf+B,CAAjC,CADwE,cAmBpCH,QAAQ,CAAC,CAC3CM,KAAK,CAAE,CADoC,CAE3CE,MAAM,CAAE,CAFmC,CAG3CI,IAAI,CAAE,CAHqC,CAI3CF,GAAG,CAAE,CAJsC,CAAD,CAnB4B,wCAmBjEI,UAnBiE,eAmBrDC,aAnBqD,eA0BxEhB,SAAS,CAAC,UAAM,CACd,GAAMiB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzBD,aAAa,CAACX,aAAa,EAAd,CAAb,CACD,CAFD,CAIA,GAAID,KAAK,CAACE,OAAV,CAAmB,CACjBU,aAAa,CAACX,aAAa,EAAd,CAAb,CACD,CAEDa,MAAM,CAACC,gBAAP,CAAwB,QAAxB,CAAkCF,YAAlC,EAEA,MAAO,WAAM,CACXC,MAAM,CAACE,mBAAP,CAA2B,QAA3B,CAAqCH,YAArC,EACD,CAFD,CAGD,CAdQ,CAcN,CAACb,KAAD,CAAQC,aAAR,CAdM,CAAT,CAgBA,MAAOU,CAAAA,UAAP,CACD,CA3CM","sourcesContent":["import { useEffect, useState, MutableRefObject, useCallback } from \"react\";\n\nexport const useResize = (myRef: MutableRefObject<HTMLElement | null>) => {\n  const getDimensions = useCallback(\n    () =>\n      myRef.current\n        ? {\n            width: myRef.current.offsetWidth,\n            height: myRef.current.offsetHeight,\n            top: myRef.current.offsetTop,\n            left: myRef.current.offsetLeft,\n          }\n        : {\n            width: 0,\n            height: 0,\n            top: 0,\n            left: 0,\n          },\n    [myRef]\n  );\n\n  const [dimensions, setDimensions] = useState({\n    width: 0,\n    height: 0,\n    left: 0,\n    top: 0,\n  });\n\n  useEffect(() => {\n    const handleResize = () => {\n      setDimensions(getDimensions());\n    };\n\n    if (myRef.current) {\n      setDimensions(getDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, [myRef, getDimensions]);\n\n  return dimensions;\n};\n"]},"metadata":{},"sourceType":"module"}