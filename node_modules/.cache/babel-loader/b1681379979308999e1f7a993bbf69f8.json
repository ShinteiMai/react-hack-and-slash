{"ast":null,"code":"\"use strict\";\n\nvar peq = new Uint32Array(0x10000);\n\nvar myers_32 = function myers_32(a, b) {\n  var n = a.length;\n  var m = b.length;\n  var lst = 1 << n - 1;\n  var pv = -1;\n  var mv = 0;\n  var sc = n;\n  var i = n;\n\n  while (i--) {\n    peq[a.charCodeAt(i)] |= 1 << i;\n  }\n\n  for (i = 0; i < m; i++) {\n    var eq = peq[b.charCodeAt(i)];\n    var xv = eq | mv;\n    eq |= (eq & pv) + pv ^ pv;\n    mv |= ~(eq | pv);\n    pv &= eq;\n\n    if (mv & lst) {\n      sc++;\n    }\n\n    if (pv & lst) {\n      sc--;\n    }\n\n    mv = mv << 1 | 1;\n    pv = pv << 1 | ~(xv | mv);\n    mv &= xv;\n  }\n\n  i = n;\n\n  while (i--) {\n    peq[a.charCodeAt(i)] = 0;\n  }\n\n  return sc;\n};\n\nvar myers_x = function myers_x(a, b) {\n  var n = a.length;\n  var m = b.length;\n  var mhc = [];\n  var phc = [];\n  var hsize = Math.ceil(n / 32);\n  var vsize = Math.ceil(m / 32);\n  var score = m;\n\n  for (var i = 0; i < hsize; i++) {\n    phc[i] = -1;\n    mhc[i] = 0;\n  }\n\n  var j = 0;\n\n  for (; j < vsize - 1; j++) {\n    var _mv = 0;\n\n    var _pv = -1;\n\n    var _start = j * 32;\n\n    var _end = Math.min(32, m) + _start;\n\n    for (var k = _start; k < _end; k++) {\n      peq[b.charCodeAt(k)] |= 1 << k;\n    }\n\n    score = m;\n\n    for (var _i = 0; _i < n; _i++) {\n      var eq = peq[a.charCodeAt(_i)];\n      var pb = phc[_i / 32 | 0] >>> _i & 1;\n      var mb = mhc[_i / 32 | 0] >>> _i & 1;\n      var xv = eq | _mv;\n      var xh = ((eq | mb) & _pv) + _pv ^ _pv | eq | mb;\n      var ph = _mv | ~(xh | _pv);\n      var mh = _pv & xh;\n\n      if (ph >>> 31 ^ pb) {\n        phc[_i / 32 | 0] ^= 1 << _i;\n      }\n\n      if (mh >>> 31 ^ mb) {\n        mhc[_i / 32 | 0] ^= 1 << _i;\n      }\n\n      ph = ph << 1 | pb;\n      mh = mh << 1 | mb;\n      _pv = mh | ~(xv | ph);\n      _mv = ph & xv;\n    }\n\n    for (var _k = _start; _k < _end; _k++) {\n      peq[b.charCodeAt(_k)] = 0;\n    }\n  }\n\n  var mv = 0;\n  var pv = -1;\n  var start = j * 32;\n  var end = Math.min(32, m - start) + start;\n\n  for (var _k2 = start; _k2 < end; _k2++) {\n    peq[b.charCodeAt(_k2)] |= 1 << _k2;\n  }\n\n  score = m;\n\n  for (var _i2 = 0; _i2 < n; _i2++) {\n    var _eq = peq[a.charCodeAt(_i2)];\n\n    var _pb = phc[_i2 / 32 | 0] >>> _i2 & 1;\n\n    var _mb = mhc[_i2 / 32 | 0] >>> _i2 & 1;\n\n    var _xv = _eq | mv;\n\n    var _xh = ((_eq | _mb) & pv) + pv ^ pv | _eq | _mb;\n\n    var _ph = mv | ~(_xh | pv);\n\n    var _mh = pv & _xh;\n\n    score += _ph >>> m - 1 & 1;\n    score -= _mh >>> m - 1 & 1;\n\n    if (_ph >>> 31 ^ _pb) {\n      phc[_i2 / 32 | 0] ^= 1 << _i2;\n    }\n\n    if (_mh >>> 31 ^ _mb) {\n      mhc[_i2 / 32 | 0] ^= 1 << _i2;\n    }\n\n    _ph = _ph << 1 | _pb;\n    _mh = _mh << 1 | _mb;\n    pv = _mh | ~(_xv | _ph);\n    mv = _ph & _xv;\n  }\n\n  for (var _k3 = start; _k3 < end; _k3++) {\n    peq[b.charCodeAt(_k3)] = 0;\n  }\n\n  return score;\n};\n\nvar distance = function distance(a, b) {\n  if (a.length > b.length) {\n    var tmp = b;\n    b = a;\n    a = tmp;\n  }\n\n  if (a.length === 0) {\n    return b.length;\n  }\n\n  if (a.length <= 32) {\n    return myers_32(a, b);\n  }\n\n  return myers_x(a, b);\n};\n\nvar closest = function closest(str, arr) {\n  var min_distance = Infinity;\n  var min_index = 0;\n\n  for (var i = 0; i < arr.length; i++) {\n    var dist = distance(str, arr[i]);\n\n    if (dist < min_distance) {\n      min_distance = dist;\n      min_index = i;\n    }\n  }\n\n  return arr[min_index];\n};\n\nmodule.exports = {\n  closest: closest,\n  distance: distance\n};","map":{"version":3,"sources":["/home/shinteimai/workspace/personal/react-pokedex/node_modules/fastest-levenshtein/index.js"],"names":["peq","Uint32Array","myers_32","a","b","n","length","m","lst","pv","mv","sc","i","charCodeAt","eq","xv","myers_x","mhc","phc","hsize","Math","ceil","vsize","score","j","start","end","min","k","pb","mb","xh","ph","mh","distance","tmp","closest","str","arr","min_distance","Infinity","min_index","dist","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\nconst peq = new Uint32Array(0x10000);\nconst myers_32 = (a, b) => {\n  const n = a.length;\n  const m = b.length;\n  const lst = 1 << (n - 1);\n  let pv = -1;\n  let mv = 0;\n  let sc = n;\n  let i = n;\n  while (i--) {\n    peq[a.charCodeAt(i)] |= 1 << i;\n  }\n  for (i = 0; i < m; i++) {\n    let eq = peq[b.charCodeAt(i)];\n    const xv = eq | mv;\n    eq |= ((eq & pv) + pv) ^ pv;\n    mv |= ~(eq | pv);\n    pv &= eq;\n    if (mv & lst) {\n      sc++;\n    }\n    if (pv & lst) {\n      sc--;\n    }\n    mv = (mv << 1) | 1;\n    pv = (pv << 1) | ~(xv | mv);\n    mv &= xv;\n  }\n  i = n;\n  while (i--) {\n    peq[a.charCodeAt(i)] = 0;\n  }\n  return sc;\n};\n\nconst myers_x = (a, b) => {\n  const n = a.length;\n  const m = b.length;\n  const mhc = [];\n  const phc = [];\n  const hsize = Math.ceil(n / 32);\n  const vsize = Math.ceil(m / 32);\n  let score = m;\n  for (let i = 0; i < hsize; i++) {\n    phc[i] = -1;\n    mhc[i] = 0;\n  }\n  let j = 0;\n  for (; j < vsize - 1; j++) {\n    let mv = 0;\n    let pv = -1;\n    const start = j * 32;\n    const end = Math.min(32, m) + start;\n    for (let k = start; k < end; k++) {\n      peq[b.charCodeAt(k)] |= 1 << k;\n    }\n    score = m;\n    for (let i = 0; i < n; i++) {\n      const eq = peq[a.charCodeAt(i)];\n      const pb = (phc[(i / 32) | 0] >>> i) & 1;\n      const mb = (mhc[(i / 32) | 0] >>> i) & 1;\n      const xv = eq | mv;\n      const xh = ((((eq | mb) & pv) + pv) ^ pv) | eq | mb;\n      let ph = mv | ~(xh | pv);\n      let mh = pv & xh;\n      if ((ph >>> 31) ^ pb) {\n        phc[(i / 32) | 0] ^= 1 << i;\n      }\n      if ((mh >>> 31) ^ mb) {\n        mhc[(i / 32) | 0] ^= 1 << i;\n      }\n      ph = (ph << 1) | pb;\n      mh = (mh << 1) | mb;\n      pv = mh | ~(xv | ph);\n      mv = ph & xv;\n    }\n    for (let k = start; k < end; k++) {\n      peq[b.charCodeAt(k)] = 0;\n    }\n  }\n  let mv = 0;\n  let pv = -1;\n  const start = j * 32;\n  const end = Math.min(32, m - start) + start;\n  for (let k = start; k < end; k++) {\n    peq[b.charCodeAt(k)] |= 1 << k;\n  }\n  score = m;\n  for (let i = 0; i < n; i++) {\n    const eq = peq[a.charCodeAt(i)];\n    const pb = (phc[(i / 32) | 0] >>> i) & 1;\n    const mb = (mhc[(i / 32) | 0] >>> i) & 1;\n    const xv = eq | mv;\n    const xh = ((((eq | mb) & pv) + pv) ^ pv) | eq | mb;\n    let ph = mv | ~(xh | pv);\n    let mh = pv & xh;\n    score += (ph >>> (m - 1)) & 1;\n    score -= (mh >>> (m - 1)) & 1;\n    if ((ph >>> 31) ^ pb) {\n      phc[(i / 32) | 0] ^= 1 << i;\n    }\n    if ((mh >>> 31) ^ mb) {\n      mhc[(i / 32) | 0] ^= 1 << i;\n    }\n    ph = (ph << 1) | pb;\n    mh = (mh << 1) | mb;\n    pv = mh | ~(xv | ph);\n    mv = ph & xv;\n  }\n  for (let k = start; k < end; k++) {\n    peq[b.charCodeAt(k)] = 0;\n  }\n  return score;\n};\n\nconst distance = (a, b) => {\n  if (a.length > b.length) {\n    const tmp = b;\n    b = a;\n    a = tmp;\n  }\n  if (a.length === 0) {\n    return b.length;\n  }\n  if (a.length <= 32) {\n    return myers_32(a, b);\n  }\n  return myers_x(a, b);\n};\n\nconst closest = (str, arr) => {\n  let min_distance = Infinity;\n  let min_index = 0;\n  for (let i = 0; i < arr.length; i++) {\n    const dist = distance(str, arr[i]);\n    if (dist < min_distance) {\n      min_distance = dist;\n      min_index = i;\n    }\n  }\n  return arr[min_index];\n};\n\nmodule.exports = {\n  closest, distance\n}\n"]},"metadata":{},"sourceType":"script"}