{"ast":null,"code":"var _jsxFileName = \"/home/shinteimai/workspace/personal/react-pokedex/src/components/InfiniteScroll.tsx\";\nimport React, { useState, useContext, createContext, useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getPokemons, PAGINATE_SIZE } from \"../features/pokemonSlice\";\nimport LoadButton from \"./LoadButton\";\nimport { Waypoint as ReactWaypoint } from \"react-waypoint\";\nconst InfiniteScrollContext = createContext({\n  page: 0,\n  setPage: () => {},\n  isLoading: true,\n  paginationHandler: getPokemons,\n  data: []\n});\n\nconst Waypoint = () => {\n  const {\n    isLoading,\n    setPage,\n    page,\n    paginationHandler,\n    data\n  } = useContext(InfiniteScrollContext);\n  const dispatch = useDispatch();\n  const paginate = useCallback(() => {\n    if (!isLoading) {\n      let dispatchPage = page;\n      setPage(p => {});\n      console.log(`len: ${data.length}`);\n      console.log(`p: ${page}`);\n      console.log(`isAdd: ${data.length > page}`);\n      dispatchPage = page + (data.length > page ? 6 : 0);\n      dispatch(paginationHandler(dispatchPage));\n    }\n  }, [isLoading, dispatch, data, paginationHandler, setPage, page]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-48\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ReactWaypoint, {\n    onEnter: () => paginate(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst Button = () => {\n  const {\n    isLoading,\n    setPage,\n    page\n  } = useContext(InfiniteScrollContext);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"py-16 mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, isLoading ? null : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LoadButton, {\n    clickHandler: () => {\n      setPage(page + PAGINATE_SIZE);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  })));\n};\n\nconst Container = ({\n  children\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-full mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-x-8 lg:gap-x-5 gap-y-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nconst InfiniteScroll = ({\n  children,\n  paginationHandler,\n  isLoading,\n  data\n}) => {\n  const [page, setPage] = useState(0);\n  return /*#__PURE__*/React.createElement(InfiniteScrollContext.Provider, {\n    value: {\n      page,\n      setPage,\n      isLoading,\n      paginationHandler,\n      data\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, children({\n    mutatePage: setPage\n  }));\n};\n\nInfiniteScroll.Container = Container;\nInfiniteScroll.Button = Button;\nInfiniteScroll.Waypoint = Waypoint;\nexport default InfiniteScroll;","map":{"version":3,"sources":["/home/shinteimai/workspace/personal/react-pokedex/src/components/InfiniteScroll.tsx"],"names":["React","useState","useContext","createContext","useCallback","useDispatch","getPokemons","PAGINATE_SIZE","LoadButton","Waypoint","ReactWaypoint","InfiniteScrollContext","page","setPage","isLoading","paginationHandler","data","dispatch","paginate","dispatchPage","p","console","log","length","Button","Container","children","InfiniteScroll","mutatePage"],"mappings":"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","sourcesContent":["import React, {\n  useState,\n  useContext,\n  createContext,\n  useEffect,\n  useCallback,\n} from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getPokemons, PAGINATE_SIZE } from \"../features/pokemonSlice\";\nimport LoadButton from \"./LoadButton\";\nimport { Waypoint as ReactWaypoint } from \"react-waypoint\";\n\ntype ContextType = {\n  page: number;\n  setPage: React.Dispatch<React.SetStateAction<number>>;\n  isLoading: boolean;\n  paginationHandler: (\n    page: number\n  ) => (dispatch: React.Dispatch<any>) => Promise<void>;\n  data: any[];\n};\nconst InfiniteScrollContext = createContext<ContextType>({\n  page: 0,\n  setPage: () => {},\n  isLoading: true,\n  paginationHandler: getPokemons,\n  data: [],\n});\n\nconst Waypoint = () => {\n  const { isLoading, setPage, page, paginationHandler, data } = useContext(\n    InfiniteScrollContext\n  );\n  const dispatch = useDispatch();\n\n  const paginate = useCallback(() => {\n    if (!isLoading) {\n      let dispatchPage: number = page;\n      setPage((p) => {});\n      console.log(`len: ${data.length}`);\n      console.log(`p: ${page}`);\n      console.log(`isAdd: ${data.length > page}`);\n      dispatchPage = page + (data.length > page ? 6 : 0);\n      dispatch(paginationHandler(dispatchPage));\n    }\n  }, [isLoading, dispatch, data, paginationHandler, setPage, page]);\n\n  return (\n    <div className=\"mt-48\">\n      <ReactWaypoint onEnter={() => paginate()} />\n    </div>\n  );\n};\n\nconst Button = () => {\n  const { isLoading, setPage, page } = useContext(InfiniteScrollContext);\n  return (\n    <div className=\"py-16 mx-auto\">\n      {isLoading ? null : (\n        <div className=\"mt-6\">\n          <LoadButton\n            clickHandler={() => {\n              setPage(page + PAGINATE_SIZE);\n            }}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\ntype ContainerProps = {\n  children: React.ReactNode;\n};\nconst Container = ({ children }: ContainerProps) => {\n  return (\n    <div className=\"w-full mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-x-8 lg:gap-x-5 gap-y-6\">\n      {children}\n    </div>\n  );\n};\n\ntype InfiniteScrollProps = {\n  children: ({\n    mutatePage: resetPage,\n  }: {\n    mutatePage: React.Dispatch<React.SetStateAction<number>>;\n  }) => React.ReactNode;\n  paginationHandler: (\n    page: number\n  ) => (dispatch: React.Dispatch<any>) => Promise<void>;\n  isLoading: boolean;\n  data: any[];\n};\n\nconst InfiniteScroll = ({\n  children,\n  paginationHandler,\n  isLoading,\n  data,\n}: InfiniteScrollProps) => {\n  const [page, setPage] = useState<number>(0);\n\n  return (\n    <InfiniteScrollContext.Provider\n      value={{\n        page,\n        setPage,\n        isLoading,\n        paginationHandler,\n        data,\n      }}\n    >\n      {children({ mutatePage: setPage })}\n    </InfiniteScrollContext.Provider>\n  );\n};\n\nInfiniteScroll.Container = Container;\nInfiniteScroll.Button = Button;\nInfiniteScroll.Waypoint = Waypoint;\nexport default InfiniteScroll;\n"]},"metadata":{},"sourceType":"module"}