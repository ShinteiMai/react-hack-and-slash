{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n}); // eslint-disable-next-line lodash-fp/use-fp\n\nvar lodash_1 = require(\"lodash\");\n\nvar fp_1 = require(\"lodash/fp\");\n\nfunction createIteratee(converter, self) {\n  return function (result, value, key) {\n    return lodash_1.set(result, converter(key), fp_1.isObjectLike(value) ? self(value) : value);\n  };\n}\n\nfunction createHumps(keyConverter) {\n  return function humps(node) {\n    if (fp_1.isArray(node)) return fp_1.map(humps, node);\n    if (fp_1.isPlainObject(node)) return lodash_1.transform(node, createIteratee(keyConverter, humps));\n    return node;\n  };\n}\n\nexports.default = createHumps;","map":{"version":3,"sources":["../src/createHumps.ts"],"names":[],"mappings":";;;;IAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AACA,IAAA,IAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AAEA,SAAS,cAAT,CAA2B,SAA3B,EAA6D,IAA7D,EAA8E;AAC5E,SAAO,UAAC,MAAD,EAAc,KAAd,EAA0B,GAA1B,EAAqC;AAC1C,WAAA,QAAA,CAAA,GAAA,CAAI,MAAJ,EAAY,SAAS,CAAC,GAAD,CAArB,EAA4B,IAAA,CAAA,YAAA,CAAa,KAAb,IAAsB,IAAI,CAAC,KAAD,CAA1B,GAAoC,KAAhE,CAAA;AAAsE,GADxE;AAED;;AAED,SAAwB,WAAxB,CAAoC,YAApC,EAAuE;AACrE,SAAO,SAAS,KAAT,CAAe,IAAf,EAAwB;AAC7B,QAAI,IAAA,CAAA,OAAA,CAAQ,IAAR,CAAJ,EAAmB,OAAO,IAAA,CAAA,GAAA,CAAI,KAAJ,EAAW,IAAX,CAAP;AACnB,QAAI,IAAA,CAAA,aAAA,CAAc,IAAd,CAAJ,EAAyB,OAAO,QAAA,CAAA,SAAA,CAAU,IAAV,EAAgB,cAAc,CAAM,YAAN,EAAoB,KAApB,CAA9B,CAAP;AACzB,WAAO,IAAP;AACD,GAJD;AAKD;;AAND,OAAA,CAAA,OAAA,GAAA,WAAA","sourceRoot":"","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// eslint-disable-next-line lodash-fp/use-fp\r\nvar lodash_1 = require(\"lodash\");\r\nvar fp_1 = require(\"lodash/fp\");\r\nfunction createIteratee(converter, self) {\r\n    return function (result, value, key) {\r\n        return lodash_1.set(result, converter(key), fp_1.isObjectLike(value) ? self(value) : value);\r\n    };\r\n}\r\nfunction createHumps(keyConverter) {\r\n    return function humps(node) {\r\n        if (fp_1.isArray(node))\r\n            return fp_1.map(humps, node);\r\n        if (fp_1.isPlainObject(node))\r\n            return lodash_1.transform(node, createIteratee(keyConverter, humps));\r\n        return node;\r\n    };\r\n}\r\nexports.default = createHumps;\r\n//# sourceMappingURL=createHumps.js.map"]},"metadata":{},"sourceType":"script"}