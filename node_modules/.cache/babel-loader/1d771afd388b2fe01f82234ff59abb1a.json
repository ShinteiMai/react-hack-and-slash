{"ast":null,"code":"var _jsxFileName = \"/home/shinteimai/workspace/personal/react-pokedex/src/components/PokemonCard.tsx\";\nimport React, { useRef } from \"react\";\nimport { PokemonTypeColors, PokemonTypePlaceholders } from \"../globals\";\nimport { leftPad } from \"../utils/leftPad\";\nimport { useSpring, animated } from \"react-spring\";\nimport Trail from \"./Trail\";\nimport ProgressiveImage from \"react-progressive-image-loading\";\nimport { useHistory } from \"react-router-dom\";\nimport { useResize } from \"../hooks/useResize\";\nconst MaskStyling = {\n  width: 130,\n  height: 130,\n  zIndex: -10,\n  bottom: 8,\n  left: 16\n};\nconst ImageContainerStyling = {\n  width: 175,\n  height: 175\n};\n\nconst calc = (x, y, width, height) => {\n  const WINDOW_DIVIDER = 60;\n  return [-(y - height / 2) / WINDOW_DIVIDER, (x - width / 2) / WINDOW_DIVIDER, 1.025];\n};\n\nconst trans = (x, y, z) => {\n  return `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${z})`;\n};\n\nconst PokemonCard = ({\n  id,\n  name,\n  sprites,\n  types\n}) => {\n  const history = useHistory();\n  const [props, set] = useSpring(() => ({\n    xys: [0, 0, 1],\n    config: {\n      mass: 8,\n      tension: 350,\n      friction: 40\n    }\n  }));\n  const cardRef = useRef(null);\n  const {\n    width,\n    height,\n    top,\n    left\n  } = useResize(cardRef);\n  const backgroundColors = types.map(({\n    type\n  }) => {\n    const [[, backgroundColor]] = Object.entries(PokemonTypeColors).filter(([key, _]) => key === type.name);\n    return backgroundColor;\n  });\n  const imagePlaceholder = types.map(({\n    type\n  }) => {\n    const [[, image]] = Object.entries(PokemonTypePlaceholders).filter(([key, _]) => key === type.name);\n    return image;\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: cardRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Trail, {\n    open: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(animated.div, {\n    onMouseMove: ({\n      clientX,\n      clientY\n    }) => set({\n      xys: calc(clientX - left, clientY - top, width, height - top)\n    }),\n    onMouseLeave: () => set({\n      xys: [0, 0, 1]\n    }),\n    className: \"w-full rounded-lg overflow-hidden shadow-lg mx-auto cursor-pointer hover:shadow-2xl transition-all duration-75 ease-in-out\",\n    style: {\n      // @ts-ignore\n      transform: props.xys.interpolate(trans),\n      backgroundColor: backgroundColors[0].medium\n    },\n    onClick: () => history.push(`/pokemons/${id}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"py-32 mx-auto w-full flex items-center justify-center relative\",\n    style: {\n      backgroundColor: backgroundColors[0].medium\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-6xl font-semibold text-black text-opacity-25 absolute tracking-xl top-1/8 pointer-events-none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"#\", leftPad(id, 3)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inset-x-auto bottom-0 absolute z-20\",\n    style: ImageContainerStyling,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rounded-full absolute z-0 inset-x-auto mx-auto\",\n    style: { ...MaskStyling,\n      backgroundColor: backgroundColors[0].light\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(ProgressiveImage, {\n    preview: imagePlaceholder[0],\n    src: sprites.frontDefault,\n    render: (src, style) => /*#__PURE__*/React.createElement(\"img\", {\n      src: src,\n      style: style,\n      alt: name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 19\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-white w-full pt-5 pb-8 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"capitalize font-semibold text-3xl mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-wrap mx-auto justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, types.map(({\n    type\n  }, index) => {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      key: `${id}-${type.name}`,\n      className: \"font-bold uppercase text-sm\" + (index !== types.length - 1 ? \" mr-6\" : \"\"),\n      style: {\n        color: backgroundColors[index].medium\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }\n    }, type.name);\n  }))))));\n};\n\nexport default PokemonCard;","map":{"version":3,"sources":["/home/shinteimai/workspace/personal/react-pokedex/src/components/PokemonCard.tsx"],"names":["React","useRef","PokemonTypeColors","PokemonTypePlaceholders","leftPad","useSpring","animated","Trail","ProgressiveImage","useHistory","useResize","MaskStyling","width","height","zIndex","bottom","left","ImageContainerStyling","calc","x","y","WINDOW_DIVIDER","trans","z","PokemonCard","id","name","sprites","types","history","props","set","xys","config","mass","tension","friction","cardRef","top","backgroundColors","map","type","backgroundColor","Object","entries","filter","key","_","imagePlaceholder","image","clientX","clientY","transform","interpolate","medium","push","light","frontDefault","src","style","index","length","color"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\nimport { Pokemon } from \"../features/pokemonSlice\";\nimport { PokemonTypeColors, PokemonTypePlaceholders } from \"../globals\";\nimport { leftPad } from \"../utils/leftPad\";\nimport { useSpring, animated } from \"react-spring\";\nimport Trail from \"./Trail\";\nimport ProgressiveImage from \"react-progressive-image-loading\";\nimport { useHistory } from \"react-router-dom\";\nimport { useResize } from \"../hooks/useResize\";\n\nconst MaskStyling = {\n  width: 130,\n  height: 130,\n  zIndex: -10,\n  bottom: 8,\n  left: 16,\n};\nconst ImageContainerStyling = {\n  width: 175,\n  height: 175,\n};\n\ntype Props = Pokemon;\n\nconst calc = (x: number, y: number, width: number, height: number) => {\n  const WINDOW_DIVIDER = 60;\n  return [\n    -(y - height / 2) / WINDOW_DIVIDER,\n    (x - width / 2) / WINDOW_DIVIDER,\n    1.025,\n  ];\n};\n\nconst trans = (x: number, y: number, z: number) => {\n  return `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${z})`;\n};\n\nconst PokemonCard = ({ id, name, sprites, types }: Props) => {\n  const history = useHistory();\n  const [props, set] = useSpring(() => ({\n    xys: [0, 0, 1],\n    config: { mass: 8, tension: 350, friction: 40 },\n  }));\n  const cardRef = useRef<HTMLDivElement | null>(null);\n  const { width, height, top, left } = useResize(cardRef);\n\n  const backgroundColors = types.map(({ type }) => {\n    const [[, backgroundColor]] = Object.entries(PokemonTypeColors).filter(\n      ([key, _]) => key === type.name\n    );\n\n    return backgroundColor;\n  });\n  const imagePlaceholder = types.map(({ type }) => {\n    const [[, image]] = Object.entries(PokemonTypePlaceholders).filter(\n      ([key, _]) => key === type.name\n    );\n\n    return image;\n  });\n\n  return (\n    <div ref={cardRef}>\n      <Trail open={true}>\n        <animated.div\n          onMouseMove={({ clientX, clientY }) =>\n            set({\n              xys: calc(clientX - left, clientY - top, width, height - top),\n            })\n          }\n          onMouseLeave={() => set({ xys: [0, 0, 1] })}\n          className=\"w-full rounded-lg overflow-hidden shadow-lg mx-auto cursor-pointer hover:shadow-2xl transition-all duration-75 ease-in-out\"\n          style={{\n            // @ts-ignore\n            transform: props.xys.interpolate(trans),\n            backgroundColor: backgroundColors[0].medium,\n          }}\n          onClick={() => history.push(`/pokemons/${id}`)}\n        >\n          <div\n            className=\"py-32 mx-auto w-full flex items-center justify-center relative\"\n            style={{\n              backgroundColor: backgroundColors[0].medium,\n            }}\n          >\n            <p className=\"text-6xl font-semibold text-black text-opacity-25 absolute tracking-xl top-1/8 pointer-events-none\">\n              #{leftPad(id, 3)}\n            </p>\n\n            <div\n              className=\"inset-x-auto bottom-0 absolute z-20\"\n              style={ImageContainerStyling}\n            >\n              <div\n                className=\"rounded-full absolute z-0 inset-x-auto mx-auto\"\n                style={{\n                  ...MaskStyling,\n                  backgroundColor: backgroundColors[0].light,\n                }}\n              />\n              <ProgressiveImage\n                preview={imagePlaceholder[0]}\n                src={sprites.frontDefault}\n                render={(src, style) => (\n                  <img src={src} style={style} alt={name} />\n                )}\n              />\n            </div>\n          </div>\n\n          <div className=\"bg-white w-full pt-5 pb-8 text-center\">\n            <h1 className=\"capitalize font-semibold text-3xl mb-2\">{name}</h1>\n            <div className=\"flex flex-wrap mx-auto justify-center\">\n              {types.map(({ type }, index) => {\n                return (\n                  <p\n                    key={`${id}-${type.name}`}\n                    className={\n                      \"font-bold uppercase text-sm\" +\n                      (index !== types.length - 1 ? \" mr-6\" : \"\")\n                    }\n                    style={{ color: backgroundColors[index].medium }}\n                  >\n                    {type.name}\n                  </p>\n                );\n              })}\n            </div>\n          </div>\n        </animated.div>\n      </Trail>\n    </div>\n  );\n};\n\nexport default PokemonCard;\n"]},"metadata":{},"sourceType":"module"}