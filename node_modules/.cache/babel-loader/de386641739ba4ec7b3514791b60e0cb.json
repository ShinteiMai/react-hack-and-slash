{"ast":null,"code":"var _jsxFileName = \"/home/shinteimai/workspace/personal/react-pokedex/src/pages/PokemonsPage.tsx\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport PokemonForm from \"../components/PokemonForm\";\nimport Layout from \"../components/Layout\";\nimport InfiniteScroll from \"../components/InfiniteScroll\";\nimport PokemonCard from \"../components/PokemonCard\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { pokemonsSelector, PAGINATE_SIZE, initializePokemonsReducer, getPokemons } from \"../features/pokemonSlice\";\nimport { SliceStatus } from \"../globals\";\nimport { cachedPokemonsSelector } from \"../features/cachedPokemonsSlice\";\nimport PokemonSkeleton from \"../components/PokemonSkeleton\";\n\nconst PokemonsPage = () => {\n  const pokemons = useSelector(pokemonsSelector);\n  const cachedPokemons = useSelector(cachedPokemonsSelector);\n  const dispatch = useDispatch();\n  const fetchPokemons = useCallback(async page => {\n    const size = PAGINATE_SIZE - pokemons.data.length % PAGINATE_SIZE;\n    dispatch(initializePokemonsReducer({\n      size\n    }));\n    return cachedPokemons.data.slice(page, page + size);\n  }, [cachedPokemons.data, pokemons.data, dispatch]);\n  const [isFetching, setIsFetching] = useState(false);\n  useEffect(() => {\n    setIsFetching(pokemons.data.slice(Math.max(pokemons.data.length - PAGINATE_SIZE, 1)).findIndex(pokemon => pokemon === null) === -1 ? false : true);\n  }, [pokemons.data, isFetching]);\n  return /*#__PURE__*/React.createElement(Layout, {\n    title: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-3xl lg:text-5xl font-semibold text-center sm:text-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"React Pok\\xE9dex\"), /*#__PURE__*/React.createElement(InfiniteScroll, {\n    isLoading: pokemons.status.state === SliceStatus.LOADING,\n    isFetching: isFetching,\n    paginationHandler: page => fetchPokemons(page),\n    paginationUpdater: async (index, size, data) => {\n      dispatch(getPokemons({\n        index,\n        size,\n        data\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, ({\n    mutatePage\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"my-4 md:my-6 lg:my-8 w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PokemonForm, {\n    placeholder: \"Search for a pok\\xE9mon...\",\n    mutatePage: mutatePage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mx-auto w-full text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, !(cachedPokemons.status.state === SliceStatus.LOADING || cachedPokemons.status.state === SliceStatus.IDLE) && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InfiniteScroll.Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }\n  }, pokemons.data.map((pokemon, index) => pokemon === null ? /*#__PURE__*/React.createElement(\"div\", {\n    key: `loading-${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(PokemonSkeleton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 27\n    }\n  })) : /*#__PURE__*/React.createElement(PokemonCard, Object.assign({\n    key: pokemon.id\n  }, pokemon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(InfiniteScroll.Waypoint, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }\n  }))))));\n};\n\nexport default PokemonsPage;","map":{"version":3,"sources":["/home/shinteimai/workspace/personal/react-pokedex/src/pages/PokemonsPage.tsx"],"names":["React","useCallback","useEffect","useState","PokemonForm","Layout","InfiniteScroll","PokemonCard","useDispatch","useSelector","pokemonsSelector","PAGINATE_SIZE","initializePokemonsReducer","getPokemons","SliceStatus","cachedPokemonsSelector","PokemonSkeleton","PokemonsPage","pokemons","cachedPokemons","dispatch","fetchPokemons","page","size","data","length","slice","isFetching","setIsFetching","Math","max","findIndex","pokemon","status","state","LOADING","index","mutatePage","IDLE","map","id"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport PokemonForm from \"../components/PokemonForm\";\n\nimport Layout from \"../components/Layout\";\nimport InfiniteScroll from \"../components/InfiniteScroll\";\nimport PokemonCard from \"../components/PokemonCard\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  pokemonsSelector,\n  getPokemonsReducer,\n  PAGINATE_SIZE,\n  initializePokemonsReducer,\n  getPokemons,\n} from \"../features/pokemonSlice\";\nimport { SliceStatus } from \"../globals\";\nimport { cachedPokemonsSelector } from \"../features/cachedPokemonsSlice\";\nimport PokemonSkeleton from \"../components/PokemonSkeleton\";\nimport fromApi from \"../api/fromApi\";\nimport { transformSpriteToBaseImage } from \"../features/utilities\";\nimport { baseImageUrl } from \"../api/axios\";\nimport { camelcaseObject } from \"../utils/camelcaseObject\";\nimport { NamedAPIResource } from \"../features/types\";\n\nconst PokemonsPage = () => {\n  const pokemons = useSelector(pokemonsSelector);\n  const cachedPokemons = useSelector(cachedPokemonsSelector);\n  const dispatch = useDispatch();\n\n  const fetchPokemons = useCallback(\n    async (page: number) => {\n      const size = PAGINATE_SIZE - (pokemons.data.length % PAGINATE_SIZE);\n      dispatch(initializePokemonsReducer({ size }));\n      return cachedPokemons.data.slice(page, page + size);\n    },\n    [cachedPokemons.data, pokemons.data, dispatch]\n  );\n\n  const [isFetching, setIsFetching] = useState<boolean>(false);\n\n  useEffect(() => {\n    setIsFetching(\n      pokemons.data\n        .slice(Math.max(pokemons.data.length - PAGINATE_SIZE, 1))\n        .findIndex((pokemon) => pokemon === null) === -1\n        ? false\n        : true\n    );\n  }, [pokemons.data, isFetching]);\n\n  return (\n    <Layout title=\"Home\">\n      <h1 className=\"text-3xl lg:text-5xl font-semibold text-center sm:text-left\">\n        React Pok√©dex\n      </h1>\n\n      <InfiniteScroll\n        isLoading={pokemons.status.state === SliceStatus.LOADING}\n        isFetching={isFetching}\n        paginationHandler={(page: number) => fetchPokemons(page)}\n        paginationUpdater={async (\n          index: number,\n          size: number,\n          data: NamedAPIResource\n        ) => {\n          dispatch(getPokemons({ index, size, data }));\n        }}\n      >\n        {({ mutatePage }) => (\n          <>\n            <div className=\"my-4 md:my-6 lg:my-8 w-full\">\n              <PokemonForm\n                placeholder=\"Search for a pok√©mon...\"\n                mutatePage={mutatePage}\n              />\n            </div>\n            <div className=\"mx-auto w-full text-center\">\n              {!(\n                cachedPokemons.status.state === SliceStatus.LOADING ||\n                cachedPokemons.status.state === SliceStatus.IDLE\n              ) && (\n                <>\n                  <InfiniteScroll.Container>\n                    {pokemons.data.map((pokemon, index) =>\n                      pokemon === null ? (\n                        <div key={`loading-${index}`}>\n                          <PokemonSkeleton />\n                        </div>\n                      ) : (\n                        <PokemonCard key={pokemon.id} {...pokemon} />\n                      )\n                    )}\n                  </InfiniteScroll.Container>\n                  <InfiniteScroll.Waypoint />\n                </>\n              )}\n            </div>\n          </>\n        )}\n      </InfiniteScroll>\n    </Layout>\n  );\n};\nexport default PokemonsPage;\n"]},"metadata":{},"sourceType":"module"}