{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { SliceStatus } from \"../globals\";\nimport { statusHandlerReducer } from \"./utilities\";\nconst initialState = {\n  data: [],\n  status: {\n    state: SliceStatus.IDLE\n  }\n};\nconst evolutionChainSlice = createSlice({\n  name: \"evolutionChains\",\n  initialState,\n  reducers: { ...statusHandlerReducer\n  }\n});\nexport const {\n  initialize,\n  error,\n  success\n} = evolutionChainSlice.actions;\nexport const statusHandler = {\n  initialize,\n  error,\n  success\n};\nexport const evolutionChainSelector = state => state;\nexport const evolutionChainReducer = evolutionChainSlice.reducer;","map":{"version":3,"sources":["/home/shinteimai/workspace/personal/react-pokedex/src/features/evolutionChainSlice.ts"],"names":["createSlice","SliceStatus","statusHandlerReducer","initialState","data","status","state","IDLE","evolutionChainSlice","name","reducers","initialize","error","success","actions","statusHandler","evolutionChainSelector","evolutionChainReducer","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,QAA4B,YAA5B;AAGA,SAASC,oBAAT,QAAqC,aAArC;AAyCA,MAAMC,YAAwB,GAAG;AAC/BC,EAAAA,IAAI,EAAE,EADyB;AAE/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,KAAK,EAAEL,WAAW,CAACM;AADb;AAFuB,CAAjC;AAOA,MAAMC,mBAAmB,GAAGR,WAAW,CAAC;AACtCS,EAAAA,IAAI,EAAE,iBADgC;AAEtCN,EAAAA,YAFsC;AAGtCO,EAAAA,QAAQ,EAAE,EACR,GAAGR;AADK;AAH4B,CAAD,CAAvC;AAQA,OAAO,MAAM;AAAES,EAAAA,UAAF;AAAcC,EAAAA,KAAd;AAAqBC,EAAAA;AAArB,IAAiCL,mBAAmB,CAACM,OAA3D;AACP,OAAO,MAAMC,aAAa,GAAG;AAAEJ,EAAAA,UAAF;AAAcC,EAAAA,KAAd;AAAqBC,EAAAA;AAArB,CAAtB;AAEP,OAAO,MAAMG,sBAAsB,GAAIV,KAAD,IAAsBA,KAArD;AAEP,OAAO,MAAMW,qBAAqB,GAAGT,mBAAmB,CAACU,OAAlD","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { SliceStatus } from \"../globals\";\nimport { RootState } from \"./store\";\nimport { NamedAPIResource } from \"./types\";\nimport { statusHandlerReducer } from \"./utilities\";\n\ntype ChainLink = {\n  isBaby: boolean;\n  species: NamedAPIResource;\n  evolutionDetails: {\n    item: NamedAPIResource;\n    trigger: NamedAPIResource;\n    gender: number;\n    heldItem: NamedAPIResource;\n    knownMove: NamedAPIResource;\n    knownMoveType: NamedAPIResource;\n    location: NamedAPIResource;\n    minLevel: NamedAPIResource;\n    minHappiness: NamedAPIResource;\n    minBeauty: NamedAPIResource;\n    minAffection: NamedAPIResource;\n    needsOverworldRain: boolean;\n    partySpecies: NamedAPIResource;\n    partyType: NamedAPIResource;\n    relativePhysicalStats: number;\n    timeOfDay: string;\n    tradeSpecies: NamedAPIResource;\n    turnUpsideDown: boolean;\n  };\n  evolvesTo: ChainLink;\n};\n\nexport type EvolutionChain = {\n  id: number;\n  babyTriggerItem: NamedAPIResource;\n  chain: ChainLink;\n};\n\ntype SliceState = {\n  data: EvolutionChain[];\n  status: {\n    state: SliceStatus;\n  };\n};\n\nconst initialState: SliceState = {\n  data: [],\n  status: {\n    state: SliceStatus.IDLE,\n  },\n};\n\nconst evolutionChainSlice = createSlice({\n  name: \"evolutionChains\",\n  initialState,\n  reducers: {\n    ...statusHandlerReducer,\n  },\n});\n\nexport const { initialize, error, success } = evolutionChainSlice.actions;\nexport const statusHandler = { initialize, error, success };\n\nexport const evolutionChainSelector = (state: RootState) => state;\n\nexport const evolutionChainReducer = evolutionChainSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}