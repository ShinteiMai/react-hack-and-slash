{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport fromApi from \"../api/fromApi\";\nimport { SliceStatus } from \"../globals\";\nimport { camelcaseObject } from \"../utils/camelcaseObject\";\nimport { statusHandlerReducer, transformSpriteToBaseImage, wrapReduxAsyncHandler } from \"./utilities\";\nimport { baseImageUrl } from \"../api/axios\";\nexport const PAGINATE_SIZE = 6;\nconst initialState = {\n  data: [],\n  status: {\n    state: SliceStatus.IDLE\n  }\n};\nconst pokemonsSlice = createSlice({\n  name: \"pokemons\",\n  initialState,\n  reducers: { ...statusHandlerReducer,\n\n    initializePokemonsReducer(state, action) {\n      const {\n        size\n      } = action.payload;\n      const nullValues = new Array(size).fill(null);\n\n      if (state.data.length === 0) {\n        state.data = nullValues;\n      } else {\n        state.data = state.data.concat(nullValues);\n      }\n    },\n\n    getPokemonsReducer(state, action) {\n      const {\n        pokemon,\n        size,\n        index\n      } = action.payload;\n      const isPokemonAlreadyExists = state.data.find(existingPokemon => existingPokemon !== null && existingPokemon.id === pokemon.id);\n\n      if (!isPokemonAlreadyExists) {\n        state.data[state.data.length - (size - index)] = pokemon;\n      }\n    },\n\n    getSinglePokemonReducer(state, action) {\n      const {\n        pokemon\n      } = action.payload;\n      const isPokemonAlreadyExists = state.data.find(existingPokemon => existingPokemon !== null && existingPokemon.id === pokemon.id);\n\n      if (!isPokemonAlreadyExists) {\n        state.data.push(pokemon);\n      }\n    },\n\n    resetPokemonsReducer(state, action) {\n      state.data = [];\n    }\n\n  }\n});\nexport const pokemonsReducer = pokemonsSlice.reducer;\nexport const {\n  initialize,\n  error,\n  success,\n  initializePokemonsReducer,\n  getPokemonsReducer,\n  resetPokemonsReducer,\n  getSinglePokemonReducer\n} = pokemonsSlice.actions;\nexport const pokemonsSelector = state => state.pokemons;\nconst statusHandler = {\n  initialize,\n  error,\n  success\n};\nexport const getPokemons = wrapReduxAsyncHandler(statusHandler, async (dispatch, {\n  index,\n  size,\n  data\n}) => {\n  const pokemonId = Number(data.url.split(\"/\").slice(-2)[0]);\n  const pokemon = await fromApi.getPokemonByNameOrId(pokemonId);\n  const pokemonImageUrl = transformSpriteToBaseImage(pokemon.id, baseImageUrl);\n  dispatch(getPokemonsReducer({\n    pokemon: { ...camelcaseObject(pokemon),\n      sprites: {\n        frontDefault: pokemonImageUrl\n      }\n    },\n    size,\n    index\n  }));\n});\nexport const getPokemonById = wrapReduxAsyncHandler(statusHandler, async (dispatch, {\n  pokemonId\n}) => {\n  const pokemon = await fromApi.getPokemonByNameOrId(pokemonId);\n  const pokemonImageUrl = transformSpriteToBaseImage(pokemon.id, baseImageUrl);\n  const transformedPokemon = { ...camelcaseObject(pokemon),\n    sprites: {\n      frontDefault: pokemonImageUrl\n    }\n  };\n  dispatch(getSinglePokemonReducer({\n    pokemon: transformedPokemon\n  }));\n});","map":{"version":3,"sources":["/home/shinteimai/workspace/personal/react-pokedex/src/features/pokemonSlice.ts"],"names":["createSlice","fromApi","SliceStatus","camelcaseObject","statusHandlerReducer","transformSpriteToBaseImage","wrapReduxAsyncHandler","baseImageUrl","PAGINATE_SIZE","initialState","data","status","state","IDLE","pokemonsSlice","name","reducers","initializePokemonsReducer","action","size","payload","nullValues","Array","fill","length","concat","getPokemonsReducer","pokemon","index","isPokemonAlreadyExists","find","existingPokemon","id","getSinglePokemonReducer","push","resetPokemonsReducer","pokemonsReducer","reducer","initialize","error","success","actions","pokemonsSelector","pokemons","statusHandler","getPokemons","dispatch","pokemonId","Number","url","split","slice","getPokemonByNameOrId","pokemonImageUrl","sprites","frontDefault","getPokemonById","transformedPokemon"],"mappings":"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","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport fromApi from \"../api/fromApi\";\nimport { SliceStatus } from \"../globals\";\nimport { RootState } from \"./store\";\nimport { NamedAPIResource } from \"./types\";\nimport { camelcaseObject } from \"../utils/camelcaseObject\";\nimport {\n  statusHandlerReducer,\n  transformSpriteToBaseImage,\n  wrapReduxAsyncHandler,\n} from \"./utilities\";\nimport { baseImageUrl } from \"../api/axios\";\n\nexport const PAGINATE_SIZE = 6;\n\nexport type Pokemon = {\n  id: number;\n  name: string;\n  baseExperience: number;\n  height: number;\n  isDefault: boolean;\n  order: number;\n  weight: number;\n  abilities: {\n    isHidden: boolean;\n    slot: number;\n    ability: NamedAPIResource;\n  }[];\n  forms: NamedAPIResource[];\n  moves: {\n    move: NamedAPIResource;\n  }[];\n  sprites: {\n    frontDefault: string;\n    frontShiny: string;\n    frontFemale: string;\n    frontShinyFemale: string;\n    backDefault: string;\n    backShiny: string;\n    backFemale: string;\n    backShinyFemale: string;\n  };\n  species: NamedAPIResource[];\n  stats: {\n    baseStat: number;\n    effort: number;\n    stat: NamedAPIResource;\n  }[];\n  types: {\n    slot: number;\n    type: NamedAPIResource;\n  }[];\n};\n\ntype SliceState = {\n  data: (Pokemon | null)[];\n  status: {\n    state: SliceStatus;\n  };\n};\n\nconst initialState: SliceState = {\n  data: [],\n  status: {\n    state: SliceStatus.IDLE,\n  },\n};\n\nconst pokemonsSlice = createSlice({\n  name: \"pokemons\",\n  initialState,\n  reducers: {\n    ...statusHandlerReducer,\n    initializePokemonsReducer(state, action: PayloadAction<{ size: number }>) {\n      const { size } = action.payload;\n      const nullValues = new Array<null>(size).fill(null);\n      if (state.data.length === 0) {\n        state.data = nullValues;\n      } else {\n        state.data = state.data.concat(nullValues);\n      }\n    },\n    getPokemonsReducer(\n      state,\n      action: PayloadAction<{ pokemon: Pokemon; index: number; size: number }>\n    ) {\n      const { pokemon, size, index } = action.payload;\n\n      const isPokemonAlreadyExists = state.data.find(\n        (existingPokemon) =>\n          existingPokemon !== null && existingPokemon.id === pokemon.id\n      );\n      if (!isPokemonAlreadyExists) {\n        state.data[state.data.length - (size - index)] = pokemon;\n      }\n    },\n    getSinglePokemonReducer(\n      state,\n      action: PayloadAction<{ pokemon: Pokemon }>\n    ) {\n      const { pokemon } = action.payload;\n      const isPokemonAlreadyExists = state.data.find(\n        (existingPokemon) =>\n          existingPokemon !== null && existingPokemon.id === pokemon.id\n      );\n      if (!isPokemonAlreadyExists) {\n        state.data.push(pokemon);\n      }\n    },\n    resetPokemonsReducer(state, action) {\n      state.data = [];\n    },\n  },\n});\n\nexport const pokemonsReducer = pokemonsSlice.reducer;\nexport const {\n  initialize,\n  error,\n  success,\n  initializePokemonsReducer,\n  getPokemonsReducer,\n  resetPokemonsReducer,\n  getSinglePokemonReducer,\n} = pokemonsSlice.actions;\n\nexport const pokemonsSelector = (state: RootState) => state.pokemons;\n\nconst statusHandler = { initialize, error, success };\n\nexport const getPokemons = wrapReduxAsyncHandler(\n  statusHandler,\n  async (dispatch, { index, size, data }) => {\n    const pokemonId = Number(data.url.split(\"/\").slice(-2)[0]);\n    const pokemon = await fromApi.getPokemonByNameOrId(pokemonId);\n    const pokemonImageUrl = transformSpriteToBaseImage(\n      pokemon.id,\n      baseImageUrl\n    );\n\n    dispatch(\n      getPokemonsReducer({\n        pokemon: {\n          ...camelcaseObject(pokemon),\n          sprites: {\n            frontDefault: pokemonImageUrl,\n          },\n        },\n        size,\n        index,\n      })\n    );\n  }\n);\n\nexport const getPokemonById = wrapReduxAsyncHandler(\n  statusHandler,\n  async (dispatch, { pokemonId }) => {\n    const pokemon = await fromApi.getPokemonByNameOrId(pokemonId);\n    const pokemonImageUrl = transformSpriteToBaseImage(\n      pokemon.id,\n      baseImageUrl\n    );\n    const transformedPokemon = {\n      ...camelcaseObject(pokemon),\n      sprites: { frontDefault: pokemonImageUrl },\n    };\n    dispatch(getSinglePokemonReducer({ pokemon: transformedPokemon }));\n  }\n);\n"]},"metadata":{},"sourceType":"module"}