{"version":3,"sources":["utils/randomize.ts","components/Modal.tsx","utils/romanize.ts","components/PokemonGenerationCard.tsx","components/PokemonIcon.tsx","components/PokemonGenerations.tsx","components/PokemonForm.tsx","hooks/useTailwindMediaQuery.ts","components/LoadButton.tsx","components/InfiniteScroll.tsx","components/Trail.tsx","components/PokemonCard.tsx","components/PokemonSkeleton.tsx","pages/PokemonsPage.tsx"],"names":["randomize","minimum","maximum","Math","floor","random","ModalContext","createContext","showModal","setShowModal","Modal","children","useState","Provider","value","Button","className","useContext","onClick","Content","title","handleSaveModal","type","style","transition","numeralCodes","PokemonGenerationCard","images","generation","isSelected","handleClick","map","image","key","src","alt","num","numeral","digits","toString","split","reverse","i","length","parseInt","romanize","PokemonIcon","height","width","generations","importPokemonImage","PokemonGenerations","selectedGeneration","setSelectedGeneration","changeGenerationHandler","isLoading","indexToPokemonGenerations","realIndex","Object","entries","PokemonGenerationsEnum","selectedEnum","forEach","index","b","previousGeneration","pickedGeneration","PokemonForm","placeholder","initialValue","changeHandler","mutatePage","dispatch","useDispatch","pokemons","useSelector","pokemonsSelector","setValue","inputRef","useRef","status","state","SliceStatus","LOADING","useEffect","clearTimeout","current","window","setTimeout","submitFormHandler","resetPokemonsReducer","searchPokemonsByNameReducer","pokemonName","color","onKeyPress","e","onChange","currentTarget","filterPokemonsByGenerationReducer","Number","GENERATION_7","PAGINATE_SIZE","useTailwindMediaQuery","isSmall","useMediaQuery","query","isMedium","isLarge","isExtraLarge","LoadButton","clickHandler","InfiniteScrollContext","page","setPage","numCols","setNumCols","paginationHandler","getPokemons","InfiniteScroll","Container","Waypoint","onEnter","Trail","open","props","items","React","Children","toArray","trail","useTrail","config","mass","tension","friction","opacity","x","from","rest","div","transform","interpolate","MaskStyling","zIndex","bottom","left","ImageContainerStyling","calc","y","position","positionDivider","innerHeight","innerWidth","trans","z","PokemonCard","memo","id","name","sprites","types","history","useHistory","backgroundColors","PokemonTypeColors","filter","imagePlaceholder","PokemonTypePlaceholders","useSpring","xys","set","onMouseMove","clientX","clientY","onMouseLeave","backgroundColor","medium","push","leftPad","light","preview","frontDefault","render","previousProps","nextProps","PokemonSkeleton","PokemonsPage","cachedPokemons","cachedPokemonsSelector","Layout","data","IDLE","pokemon"],"mappings":"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","file":"static/js/4.3002c111.chunk.js","sourcesContent":["export const randomize = (minimum: number, maximum: number) =>\n  Math.floor(Math.random() * (maximum - minimum + 1)) + minimum;\n","import React, { useContext, useState, createContext } from \"react\";\n\ntype ModalContextType = {\n  showModal: boolean;\n  setShowModal: React.Dispatch<React.SetStateAction<boolean>>;\n};\nconst ModalContext = createContext<ModalContextType>({\n  showModal: false,\n  setShowModal: () => {},\n});\n\ntype ButtonProps = {\n  children: React.ReactNode;\n  className?: string;\n};\nconst Button = ({ children, className }: ButtonProps) => {\n  const { setShowModal } = useContext(ModalContext);\n\n  return (\n    <button onClick={() => setShowModal(true)} className={className}>\n      {children}\n    </button>\n  );\n};\n\ntype ContentProps = {\n  title?: string;\n  children?: React.ReactNode;\n  handleSaveModal?: () => void;\n};\nconst Content = ({ children, title, handleSaveModal }: ContentProps) => {\n  const { showModal, setShowModal } = useContext(ModalContext);\n  return showModal ? (\n    <>\n      <div className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\">\n        <div className=\"relative w-auto my-6 mx-auto max-w-3xl\">\n          {/* Content */}\n          <div className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\">\n            {/* Header */}\n            <div className=\"flex items-start justify-between p-5 border-b border-solid border-gray-300 rounded-t\">\n              <h3 className=\"text-xl sm:text-2xl md:text-3xl font-semibold\">\n                {title || \"Title\"}\n              </h3>\n            </div>\n            {/* Body */}\n            <div className=\"relative p-6 flex-auto overflow-y-auto h-96\">\n              {children}\n            </div>\n            {/* Footer */}\n            <div className=\"flex items-center justify-end px-6 py-4 border-t border-solid border-gray-300 rounded-b\">\n              <button\n                className=\"text-primary background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-3 mb-1 hover:text-white hover:bg-primary transition-all duration-200 ease-in-out rounded-lg\"\n                type=\"button\"\n                onClick={() => setShowModal(false)}\n              >\n                Close\n              </button>\n              <button\n                className=\"bg-green-500 text-white active:bg-green-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1\"\n                type=\"button\"\n                style={{ transition: \"all .15s ease\" }}\n                onClick={() => {\n                  if (handleSaveModal) {\n                    handleSaveModal();\n                  }\n\n                  setShowModal(false);\n                }}\n              >\n                Change\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\n    </>\n  ) : null;\n};\n\ntype ModalProps = {\n  children: React.ReactNode;\n};\nconst Modal = ({ children }: ModalProps) => {\n  const [showModal, setShowModal] = useState<boolean>(false);\n\n  return (\n    <ModalContext.Provider value={{ showModal, setShowModal }}>\n      {children}\n    </ModalContext.Provider>\n  );\n};\n\nModal.Button = Button;\nModal.Content = Content;\n\nexport default Modal;\n","const numeralCodes = [\n  [\"\", \"I\", \"II\", \"III\", \"IV\", \"V\", \"VI\", \"VII\", \"VIII\", \"IX\"], // Ones\n  [\"\", \"X\", \"XX\", \"XXX\", \"XL\", \"L\", \"LX\", \"LXX\", \"LXXX\", \"XC\"], // Tens\n  [\"\", \"C\", \"CC\", \"CCC\", \"CD\", \"D\", \"DC\", \"DCC\", \"DCCC\", \"CM\"], // Hundreds\n];\n\nexport const romanize = (num: number) => {\n  let numeral = \"\";\n  const digits = num.toString().split(\"\").reverse();\n  for (var i = 0; i < digits.length; i++) {\n    numeral = numeralCodes[i][parseInt(digits[i])] + numeral;\n  }\n  return numeral;\n};\n","import React from \"react\";\nimport { romanize } from \"../utils/romanize\";\n\ntype Props = {\n  images: string[];\n  generation: number;\n  isSelected: boolean;\n  handleClick: () => void;\n};\n\nconst PokemonGenerationCard = ({\n  images,\n  generation,\n  isSelected,\n  handleClick,\n}: Props) => {\n  return (\n    <div\n      onClick={() => handleClick()}\n      // className=\"w-full tracking-wide text-center text-black bg-primaryGray mx-auto px-8 py-5 rounded-lg hover:bg-primarySecondary hover:text-white hover:font-medium transition-all duration-200 ease-in-out cursor-pointer\"\n      className={\n        \"w-full tracking-wide text-center mx-auto px-8 py-5 rounded-lg hover:font-medium transition-all duration-200 ease-in-out cursor-pointer \" +\n        (isSelected\n          ? \"bg-primarySecondary text-white transform hover:-translate-y-2 hover:shadow-md\"\n          : \"bg-primaryGray text-black hover:bg-primarySecondary hover:text-white\")\n      }\n    >\n      <div className=\"flex justify-center items-center\">\n        {images.map((image) => (\n          <img key={image} className=\"w-16 h-16\" src={image} alt=\"Pokemon\" />\n        ))}\n      </div>\n      <p className=\"text-md mt-4\">Generation {romanize(generation)}</p>\n    </div>\n  );\n};\nexport default PokemonGenerationCard;\n","import React from \"react\";\n\ntype Props = {\n  alt: string;\n  src: string;\n};\n\nconst PokemonIcon = ({ src, alt }: Props) => {\n  return (\n    <img\n      src={src}\n      alt={alt}\n      style={{\n        height: 30,\n        width: 30,\n      }}\n    />\n  );\n};\n\nexport default PokemonIcon;\n","import React from \"react\";\n\nimport Modal from \"./Modal\";\nimport PokemonGenerationCard from \"./PokemonGenerationCard\";\nimport PokemonIcon from \"./PokemonIcon\";\n\nimport { importPokemonImage } from \"../globals\";\nimport { PokemonGenerationsEnum } from \"../features/cachedPokemonsSlice\";\n\nconst generations = [\n  [\n    importPokemonImage(\"bulbasaur\"),\n    importPokemonImage(\"charmander\"),\n    importPokemonImage(\"squirtle\"),\n  ],\n  [\n    importPokemonImage(\"chikorita\"),\n    importPokemonImage(\"cyndaquil\"),\n    importPokemonImage(\"totodile\"),\n  ],\n  [\n    importPokemonImage(\"treecko\"),\n    importPokemonImage(\"torchic\"),\n    importPokemonImage(\"mudkip\"),\n  ],\n  [\n    importPokemonImage(\"turtwig\"),\n    importPokemonImage(\"chimcar\"),\n    importPokemonImage(\"piplup\"),\n  ],\n  [\n    importPokemonImage(\"snivy\"),\n    importPokemonImage(\"tepig\"),\n    importPokemonImage(\"oshawott\"),\n  ],\n  [\n    importPokemonImage(\"chespin\"),\n    importPokemonImage(\"fennekin\"),\n    importPokemonImage(\"froakie\"),\n  ],\n  [\n    importPokemonImage(\"rowlet\"),\n    importPokemonImage(\"litten\"),\n    importPokemonImage(\"popplio\"),\n  ],\n];\n\ntype Props = {\n  selectedGeneration: PokemonGenerationsEnum | null;\n  setSelectedGeneration: React.Dispatch<\n    React.SetStateAction<PokemonGenerationsEnum | null>\n  >;\n  changeGenerationHandler: () => void;\n  isLoading: boolean;\n};\n\nconst PokemonGenerations = ({\n  selectedGeneration,\n  setSelectedGeneration,\n  changeGenerationHandler,\n  isLoading,\n}: Props) => {\n  const indexToPokemonGenerations = (\n    realIndex: number\n  ): PokemonGenerationsEnum | null => {\n    const generations = Object.entries(PokemonGenerationsEnum);\n    let selectedEnum: PokemonGenerationsEnum | null = null;\n\n    generations.forEach(([_, b], index) => {\n      if (index === realIndex) {\n        selectedEnum = b;\n      }\n    });\n    return selectedEnum;\n  };\n\n  return (\n    <Modal>\n      <Modal.Button\n        className={\n          \"bg-primaryGray px-4 py-1 rounded-lg text-white hover:border-transparent focus:outline-none \" +\n          \" \" +\n          (isLoading\n            ? \"opacity-50 cursor-default\"\n            : \"cursor-pointer transform hover:-translate-y-1 hover:shadow transition-all duration-200 ease-in-out\")\n        }\n      >\n        <div className=\"flex justify-between\">\n          <PokemonIcon src={importPokemonImage(\"bulbasaur\")} alt=\"Bulbasaur\" />\n          <PokemonIcon\n            src={importPokemonImage(\"charmander\")}\n            alt=\"Charmander\"\n          />\n          <PokemonIcon src={importPokemonImage(\"squirtle\")} alt=\"Squirtle\" />\n        </div>\n      </Modal.Button>\n      <Modal.Content\n        title=\"Pokémon Generations\"\n        handleSaveModal={changeGenerationHandler}\n      >\n        <div className=\"mx-auto py-3 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 gap-x-5 gap-y-6\">\n          {generations.map((images, index) => (\n            <PokemonGenerationCard\n              key={`generations-${index}`}\n              images={images}\n              generation={index + 1}\n              isSelected={\n                selectedGeneration === indexToPokemonGenerations(index) &&\n                selectedGeneration !== null\n              }\n              handleClick={() => {\n                setSelectedGeneration((previousGeneration) => {\n                  const pickedGeneration = indexToPokemonGenerations(index);\n                  return previousGeneration === pickedGeneration\n                    ? null\n                    : pickedGeneration;\n                });\n              }}\n            />\n          ))}\n        </div>\n      </Modal.Content>\n    </Modal>\n  );\n};\nexport default PokemonGenerations;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { GoSearch } from \"react-icons/go\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  PokemonGenerationsEnum,\n  searchPokemonsByNameReducer,\n  filterPokemonsByGenerationReducer,\n} from \"../features/cachedPokemonsSlice\";\nimport {\n  PAGINATE_SIZE,\n  pokemonsSelector,\n  resetPokemonsReducer,\n} from \"../features/pokemonSlice\";\nimport { SliceStatus } from \"../globals\";\nimport { randomize } from \"../utils/randomize\";\nimport PokemonGenerations from \"./PokemonGenerations\";\n\ntype Props = {\n  mutatePage: React.Dispatch<React.SetStateAction<number>>;\n  placeholder?: string;\n  initialValue?: string;\n  changeHandler?: () => void;\n};\n\nconst PokemonForm = ({\n  placeholder,\n  initialValue = \"\",\n  changeHandler,\n  mutatePage,\n}: Props) => {\n  const dispatch = useDispatch();\n  const pokemons = useSelector(pokemonsSelector);\n  const [value, setValue] = useState<string>(initialValue);\n  const [\n    selectedGeneration,\n    setSelectedGeneration,\n  ] = useState<PokemonGenerationsEnum | null>(null);\n  const inputRef = useRef(0);\n\n  const isLoading = pokemons.status.state === SliceStatus.LOADING;\n\n  useEffect(() => {\n    if (changeHandler) {\n      clearTimeout(inputRef.current);\n      inputRef.current = window.setTimeout(() => {\n        changeHandler();\n      }, 100);\n    }\n  }, [value, changeHandler]);\n\n  const submitFormHandler = () => {\n    if (!isLoading) {\n      dispatch(resetPokemonsReducer({}));\n      dispatch(searchPokemonsByNameReducer({ pokemonName: value }));\n      mutatePage(0);\n    }\n  };\n\n  const changeGenerationHandler = () => {\n    if (!isLoading) {\n      dispatch(resetPokemonsReducer({}));\n      dispatch(filterPokemonsByGenerationReducer({ selectedGeneration }));\n      if (selectedGeneration === null) {\n        mutatePage(\n          randomize(\n            0,\n            Number(PokemonGenerationsEnum.GENERATION_7) - PAGINATE_SIZE\n          )\n        );\n      } else {\n        mutatePage(0);\n      }\n    }\n  };\n\n  return (\n    <div className=\"flex items-center justify-center md:justify-start flex-wrap\">\n      <div className=\"relative inline-flex\">\n        <span className=\"absolute inset-y-0 left-0 flex items-center pl-2\">\n          <div className=\"absolute flex items-center justify-center pointer-events-none\">\n            <GoSearch color=\"#8A8A8A\" />\n          </div>\n        </span>\n\n        <input\n          className=\"py-2 pl-10 md:pr-24 lg:pr-48  w-full text-sm rounded-lg bg-primaryGray text-tertiaryGray placeholder-tertiaryGray appearance-none focus:outline-none focus:font-medium focus:border-secondaryGray\"\n          placeholder={placeholder || \"Search an item...\"}\n          value={value}\n          onKeyPress={(e: React.KeyboardEvent) => {\n            if (e.key === \"Enter\") {\n              submitFormHandler();\n            }\n          }}\n          onChange={(e: React.FormEvent<HTMLInputElement>) =>\n            setValue(e.currentTarget.value)\n          }\n        />\n      </div>\n\n      <div className=\"ml-2 md:ml-5 mt-3 md:mt-0\">\n        <PokemonGenerations\n          selectedGeneration={selectedGeneration}\n          setSelectedGeneration={setSelectedGeneration}\n          changeGenerationHandler={changeGenerationHandler}\n          isLoading={isLoading}\n        />\n      </div>\n\n      <button\n        className={\n          \"ml-2 md:ml-5 mt-3 md:mt-0 bg-primary py-1 px-8 rounded-md text-white font-semibold  focus:outline-none transition duration-200 ease-in-out\" +\n          (isLoading\n            ? \" opacity-50 cursor-default\"\n            : \" hover:bg-white hover:text-primary transform hover:-translate-y-1 cursor-pointer\")\n        }\n        onClick={submitFormHandler}\n      >\n        Search\n      </button>\n    </div>\n  );\n};\n\nexport default PokemonForm;\n","import { useMediaQuery } from \"react-responsive\";\n\nconst useTailwindMediaQuery = () => {\n  const isSmall = useMediaQuery({\n    query: \"(min-device-width: 640px)\",\n  });\n  const isMedium = useMediaQuery({\n    query: \"(min-device-width: 768px)\",\n  });\n  const isLarge = useMediaQuery({\n    query: \"(min-device-width: 1024px)\",\n  });\n  const isExtraLarge = useMediaQuery({\n    query: \"(min-device-width: 1280px)\",\n  });\n  return {\n    isSmall,\n    isMedium,\n    isLarge,\n    isExtraLarge,\n  };\n};\n\nexport default useTailwindMediaQuery;\n","import React from \"react\";\nimport { ReactComponent as PokeballIcon } from \"../svg/pokeball.svg\";\n\ntype Props = {\n  clickHandler: () => void;\n};\n\nconst LoadButton = ({ clickHandler }: Props) => {\n  return (\n    <button\n      onClick={clickHandler}\n      className=\"py-2 px-6 rounded-lg font-semibold bg-primary text-white relative inline-flex focus:outline-none transform hover:-translate-y-1 transition-all ease-in-out duration-200\"\n    >\n      <div className=\"absolute inset-y-0 left-0 flex items-center pl-4\">\n        <PokeballIcon className=\"w-6 h-6 fill-current\" />\n      </div>\n      <span className=\"pl-8\">Load More</span>\n    </button>\n  );\n};\n\nexport default LoadButton;\n","import React, { useEffect, useState, useContext, createContext } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getPokemons, PAGINATE_SIZE } from \"../features/pokemonSlice\";\nimport { PokemonGenerationsEnum } from \"../features/cachedPokemonsSlice\";\nimport useTailwindMediaQuery from \"../hooks/useTailwindMediaQuery\";\nimport LoadButton from \"./LoadButton\";\nimport { randomize } from \"../utils/randomize\";\nimport { Waypoint as ReactWaypoint } from \"react-waypoint\";\n\ntype ContextType = {\n  page: number;\n  setPage: React.Dispatch<React.SetStateAction<number>>;\n  numCols: number;\n  setNumCols: React.Dispatch<React.SetStateAction<number>>;\n  isLoading: boolean;\n  paginationHandler: (\n    page: number\n  ) => (dispatch: React.Dispatch<any>) => Promise<void>;\n};\nconst InfiniteScrollContext = createContext<ContextType>({\n  page: 0,\n  setPage: () => {},\n  numCols: 0,\n  setNumCols: () => {},\n  isLoading: true,\n  paginationHandler: getPokemons,\n});\n\nconst Waypoint = () => {\n  const { isLoading, setPage, page, paginationHandler } = useContext(\n    InfiniteScrollContext\n  );\n  const dispatch = useDispatch();\n  return (\n    <div className=\"mt-48\">\n      <ReactWaypoint\n        onEnter={() => {\n          if (!isLoading) {\n            setPage(page + PAGINATE_SIZE);\n            dispatch(paginationHandler(page));\n          }\n        }}\n      />\n    </div>\n  );\n};\n\nconst Button = () => {\n  const { isLoading, setPage, page } = useContext(InfiniteScrollContext);\n  return (\n    <div className=\"py-16 mx-auto\">\n      {isLoading ? null : (\n        <div className=\"mt-6\">\n          <LoadButton\n            clickHandler={() => {\n              setPage(page + PAGINATE_SIZE);\n            }}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\ntype ContainerProps = {\n  children: ({ numCols }: { numCols: number }) => React.ReactNode;\n};\nconst Container = ({ children }: ContainerProps) => {\n  const { numCols } = useContext(InfiniteScrollContext);\n\n  return (\n    <div className=\"w-full mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-x-8 lg:gap-x-5 gap-y-6\">\n      {children({ numCols })}\n    </div>\n  );\n};\n\ntype InfiniteScrollProps = {\n  children: ({\n    mutatePage: resetPage,\n  }: {\n    mutatePage: React.Dispatch<React.SetStateAction<number>>;\n  }) => React.ReactNode;\n  paginationHandler: (\n    page: number\n  ) => (dispatch: React.Dispatch<any>) => Promise<void>;\n  isLoading: boolean;\n};\n\nconst InfiniteScroll = ({\n  children,\n  paginationHandler,\n  isLoading,\n}: InfiniteScrollProps) => {\n  const { isSmall, isLarge } = useTailwindMediaQuery();\n  const [page, setPage] = useState(\n    randomize(0, Number(PokemonGenerationsEnum.GENERATION_7) - PAGINATE_SIZE)\n  );\n  const [numCols, setNumCols] = useState(1);\n\n  useEffect(() => {\n    let col: number;\n\n    if (isSmall) {\n      col = 2;\n    }\n    if (isLarge) {\n      col = 3;\n    } else {\n      col = 1;\n    }\n\n    setNumCols(col);\n  }, [isSmall, isLarge]);\n\n  return (\n    <InfiniteScrollContext.Provider\n      value={{\n        page,\n        setPage,\n        numCols,\n        setNumCols,\n        isLoading,\n        paginationHandler,\n      }}\n    >\n      {children({ mutatePage: setPage })}\n    </InfiniteScrollContext.Provider>\n  );\n};\n\nInfiniteScroll.Container = Container;\nInfiniteScroll.Button = Button;\nInfiniteScroll.Waypoint = Waypoint;\nexport default InfiniteScroll;\n","import React from \"react\";\nimport { useTrail, animated } from \"react-spring\";\n\ntype Props = {\n  children: React.ReactNode;\n  open: boolean;\n  className?: string;\n};\n\nconst Trail = ({ open, children, className, ...props }: Props) => {\n  const items = React.Children.toArray(children);\n  const trail = useTrail(items.length, {\n    config: { mass: 5, tension: 2000, friction: 200 },\n    opacity: open ? 1 : 0,\n    x: open ? 0 : 20,\n    height: open ? 110 : 0,\n    from: { opacity: 0, x: 20, height: 0 },\n  });\n  return (\n    <div {...props}>\n      <div>\n        {trail.map(({ x, height, ...rest }, index) => (\n          <animated.div\n            key={index}\n            style={{\n              ...rest,\n              // @ts-ignore\n              transform: x.interpolate((x) => `translate3d(0,${x}px,0)`),\n            }}\n          >\n            <animated.div className={className}>{items[index]}</animated.div>\n          </animated.div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Trail;\n","import React from \"react\";\nimport { Pokemon } from \"../features/pokemonSlice\";\nimport { PokemonTypeColors, PokemonTypePlaceholders } from \"../globals\";\nimport { leftPad } from \"../utils/leftPad\";\nimport { useSpring, animated } from \"react-spring\";\nimport Trail from \"./Trail\";\nimport ProgressiveImage from \"react-progressive-image-loading\";\nimport { useHistory } from \"react-router-dom\";\n\nconst MaskStyling = {\n  width: 130,\n  height: 130,\n  zIndex: -10,\n  bottom: 8,\n  left: 16,\n};\nconst ImageContainerStyling = {\n  width: 175,\n  height: 175,\n};\n\ntype Props = Pokemon & {\n  position: number;\n  numCols: number;\n};\n\nconst calc = (x: number, y: number, position: number, numCols: number) => {\n  const WINDOW_DIVIDER = 60;\n  const Y_DIVIDER = 0.5;\n  let positionDivider: number = 0.5;\n\n  switch (numCols) {\n    case 1:\n      positionDivider = 0.5;\n      break;\n    case 2:\n      if (position === 0) positionDivider = 0.3;\n      if (position === 1) positionDivider = 0.7;\n      break;\n    case 3:\n      if (position === 0) positionDivider = 0.25;\n      if (position === 1) positionDivider = 0.5;\n      if (position === 2) positionDivider = 0.75;\n      break;\n    default:\n      break;\n  }\n\n  return [\n    -(y - window.innerHeight * Y_DIVIDER) / WINDOW_DIVIDER,\n    (x - window.innerWidth * positionDivider) / WINDOW_DIVIDER,\n    1,\n  ];\n};\n\nconst trans = (x: number, y: number, z: number) => {\n  return `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${z})`;\n};\n\nconst PokemonCard = React.memo(\n  ({ id, name, sprites, types, position, numCols }: Props) => {\n    const history = useHistory();\n    const backgroundColors = types.map(({ type }) => {\n      const [[, backgroundColor]] = Object.entries(PokemonTypeColors).filter(\n        ([key, _]) => key === type.name\n      );\n\n      return backgroundColor;\n    });\n    const imagePlaceholder = types.map(({ type }) => {\n      const [[, image]] = Object.entries(PokemonTypePlaceholders).filter(\n        ([key, _]) => key === type.name\n      );\n\n      return image;\n    });\n    const [props, set] = useSpring(() => ({\n      xys: [0, 0, 1],\n      config: { mass: 8, tension: 350, friction: 40 },\n    }));\n\n    return (\n      <Trail open={true}>\n        <animated.div\n          onMouseMove={({ clientX: x, clientY: y }) =>\n            set({ xys: calc(x, y, position, numCols) })\n          }\n          onMouseLeave={() => set({ xys: [0, 0, 1] })}\n          className=\"w-full rounded-lg overflow-hidden shadow-lg mx-auto cursor-pointer hover:shadow-2xl transition-all duration-75 ease-in-out\"\n          style={{\n            // @ts-ignore\n            transform: props.xys.interpolate(trans),\n            backgroundColor: backgroundColors[0].medium,\n          }}\n          onClick={() => history.push(`/pokemons/${id}`)}\n        >\n          <div\n            className=\"py-32 mx-auto w-full flex items-center justify-center relative\"\n            style={{\n              backgroundColor: backgroundColors[0].medium,\n            }}\n          >\n            <p className=\"text-6xl font-semibold text-black text-opacity-25 absolute tracking-xl top-1/8 pointer-events-none\">\n              #{leftPad(id, 3)}\n            </p>\n\n            <div\n              className=\"inset-x-auto bottom-0 absolute z-20\"\n              style={ImageContainerStyling}\n            >\n              <div\n                className=\"rounded-full absolute z-0 inset-x-auto mx-auto\"\n                style={{\n                  ...MaskStyling,\n                  backgroundColor: backgroundColors[0].light,\n                }}\n              />\n              <ProgressiveImage\n                preview={imagePlaceholder[0]}\n                src={sprites.frontDefault}\n                render={(src, style) => (\n                  <img src={src} style={style} alt={name} />\n                )}\n              />\n            </div>\n          </div>\n\n          <div className=\"bg-white w-full pt-5 pb-8 text-center\">\n            <h1 className=\"capitalize font-semibold text-3xl mb-2\">{name}</h1>\n            <div className=\"flex flex-wrap mx-auto justify-center\">\n              {types.map(({ type }, index) => {\n                return (\n                  <p\n                    key={`${id}-${type.name}`}\n                    className={\n                      \"font-bold uppercase text-sm\" +\n                      (index !== types.length - 1 ? \" mr-6\" : \"\")\n                    }\n                    style={{ color: backgroundColors[index].medium }}\n                  >\n                    {type.name}\n                  </p>\n                );\n              })}\n            </div>\n          </div>\n        </animated.div>\n      </Trail>\n    );\n  },\n  (previousProps, nextProps) => previousProps.id === nextProps.id\n);\n\nexport default PokemonCard;\n","import React from \"react\";\n\nconst PokemonSkeleton = () => {\n  return (\n    <div\n      className=\"w-full rounded-lg overflow-hidden shadow-lg mx-auto cursor-pointer hover:shadow-2xl transition-all duration-75 ease-in-out\"\n      style={{\n        backgroundColor: \"#E3E3E3\",\n      }}\n    >\n      <div\n        className=\"py-32 mx-auto w-full flex items-center justify-center relative\"\n        style={{\n          backgroundColor: \"#E3E3E3\",\n        }}\n      >\n        <p className=\"text-6xl font-semibold text-black text-opacity-25 absolute tracking-xl top-1/8 pointer-events-none\"></p>\n\n        <div\n          className=\"inset-x-auto bottom-0 absolute z-20\"\n          style={{\n            width: 175,\n            height: 175,\n          }}\n        >\n          <div\n            className=\"rounded-full absolute z-0 inset-x-auto mx-auto\"\n            style={{\n              width: 130,\n              height: 130,\n              backgroundColor: \"#E3E3E3\",\n              zIndex: -10,\n              bottom: 8,\n              left: 16,\n            }}\n          />\n        </div>\n      </div>\n      <div className=\"animate-pulse flex  w-full\">\n        <div className=\"flex-1 space-y-4 py-1\">\n          <div className=\"h-4 bg-gray-400 rounded w-3/4\"></div>\n          <div className=\"space-y-2\"></div>\n        </div>\n        <div className=\"bg-white w-full pt-5 pb-8 text-center\">\n          <h1 className=\"capitalize font-semibold text-3xl mb-2 inline-block mx-auto w-32\">\n            <div className=\"h-6 bg-gray-300 rounded\"></div>\n          </h1>\n          <div className=\"flex flex-wrap mx-auto justify-center\">\n            <div className=\"h-6 bg-gray-300 rounded w-16 mr-4\"></div>\n            <div className=\"h-6 bg-gray-300 rounded w-16\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default PokemonSkeleton;\n","import React from \"react\";\nimport PokemonForm from \"../components/PokemonForm\";\n\nimport Layout from \"../components/Layout\";\nimport InfiniteScroll from \"../components/InfiniteScroll\";\nimport PokemonCard from \"../components/PokemonCard\";\nimport { useSelector } from \"react-redux\";\nimport { pokemonsSelector, getPokemons } from \"../features/pokemonSlice\";\nimport { SliceStatus } from \"../globals\";\nimport { cachedPokemonsSelector } from \"../features/cachedPokemonsSlice\";\nimport PokemonSkeleton from \"../components/PokemonSkeleton\";\n\nconst PokemonsPage = () => {\n  const pokemons = useSelector(pokemonsSelector);\n  const cachedPokemons = useSelector(cachedPokemonsSelector);\n\n  return (\n    <Layout title=\"Home\">\n      <h1 className=\"text-3xl lg:text-5xl font-semibold text-center sm:text-left\">\n        React Pokédex\n      </h1>\n\n      <InfiniteScroll\n        paginationHandler={(page: number) =>\n          getPokemons({\n            page,\n            cachedPokemons: cachedPokemons.data,\n            pokemons: pokemons.data,\n          })\n        }\n        isLoading={pokemons.status.state === SliceStatus.LOADING}\n      >\n        {({ mutatePage }) => (\n          <>\n            <div className=\"my-4 md:my-6 lg:my-8 w-full\">\n              <PokemonForm\n                placeholder=\"Search for a pokémon...\"\n                mutatePage={mutatePage}\n              />\n            </div>\n            <div className=\"mx-auto w-full text-center\">\n              {!(\n                cachedPokemons.status.state === SliceStatus.LOADING ||\n                cachedPokemons.status.state === SliceStatus.IDLE\n              ) && (\n                <>\n                  <InfiniteScroll.Container>\n                    {({ numCols }) => (\n                      <>\n                        {pokemons.data.map((pokemon, index) =>\n                          pokemon === null ? (\n                            <div key={`loading-${index}`}>\n                              <PokemonSkeleton />\n                            </div>\n                          ) : (\n                            <PokemonCard\n                              key={pokemon.id}\n                              {...pokemon}\n                              position={index % numCols}\n                              numCols={numCols}\n                            />\n                          )\n                        )}\n                      </>\n                    )}\n                  </InfiniteScroll.Container>\n                  <InfiniteScroll.Waypoint />\n                </>\n              )}\n            </div>\n          </>\n        )}\n      </InfiniteScroll>\n    </Layout>\n  );\n};\nexport default PokemonsPage;\n"],"sourceRoot":""}